/*!
 * Krig.io
 * Krig.io webpage, using the fastshell boilerplate.
 * https://krig.io
 * @author Krig.io
 * @version 0.0.1
 * Copyright 2018. UNLICENSED licensed.
 */
!function(e){function t(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,t),r.l=!0,r.exports}var n={};return t.m=e,t.c=n,t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:o})},t.n=function(e){var n=e&&e.__esModule?function(){return e["default"]}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=0)}([function(e,t,n){"use strict";function o(e){return e&&e.__esModule?e:{"default":e}}var r=n(1),i=o(r),a=n(2),u=(o(a),n(3));(0,i["default"])(),document.addEventListener("DOMContentLoaded",function(){u.init({elements:document.querySelectorAll("section"),minWidth:600,minHeight:400,detectMobile:!0,keyboard:!0,duration:20,timing:u._timing})})},function(e,t,n){"use strict";function o(e){var t=-1,n=1;switch(e){case"top":return[i(t,n),i(.1,n)];case"right":return[i(t,-.1),i(t,n)];case"bottom":return[i(t,n),i(t,-.1)];case"left":return[i(.1,n),i(t,n)];default:return}}function r(e){return e[Math.floor(Math.random()*e.length)]}function i(e,t){return Math.random()*(t-e)+e}function a(){var e=r(["top","right","bottom","left"]);switch(e){case"top":return{x:u(y),y:-P,vx:o("top")[0],vy:o("top")[1],r:P,alpha:1,phase:i(0,10)};case"right":return{x:y+P,y:u(b),vx:o("right")[0],vy:o("right")[1],r:P,alpha:1,phase:i(0,10)};case"bottom":return{x:u(y),y:b+P,vx:o("bottom")[0],vy:o("bottom")[1],r:P,alpha:1,phase:i(0,10)};case"left":return{x:-P,y:u(b),vx:o("left")[0],vy:o("left")[1],r:P,alpha:1,phase:i(0,10)}}}function u(e){return Math.ceil(Math.random()*e)}function l(){Array.prototype.forEach.call(E,function(e){e.hasOwnProperty("type")||(w.fillStyle="rgba("+x.r+","+x.g+","+x.b+","+e.alpha+")",w.beginPath(),w.arc(e.x,e.y,P,0,2*Math.PI,!0),w.closePath(),w.fill())})}function c(){var e=[];Array.prototype.forEach.call(E,function(t){t.x+=t.vx,t.y+=t.vy,t.x>-50&&t.x<y+50&&t.y>-50&&t.y<b+50&&e.push(t),t.phase+=M,t.alpha=Math.abs(Math.cos(t.phase))}),E=e.slice(0)}function s(){for(var e,t,n=0;n<E.length;n++)for(var o=n+1;o<E.length;o++)e=d(E[n],E[o])/A,e<1&&(t=(1-e).toString(),w.strokeStyle="rgba(150,150,150,"+t+")",w.lineWidth=L,w.beginPath(),w.moveTo(E[n].x,E[n].y),w.lineTo(E[o].x,E[o].y),w.stroke(),w.closePath())}function d(e,t){var n=Math.abs(e.x-t.x),o=Math.abs(e.y-t.y);return Math.sqrt(n*n+o*o)}function h(){E.length<20&&E.push(a())}function f(){w.clearRect(0,0,y,b),l(),s(),c(),h(),window.requestAnimationFrame(f)}function v(e){for(var t=1;t<=e;t++)E.push({x:u(y),y:u(b),vx:o("top")[0],vy:o("top")[1],r:P,alpha:1,phase:i(0,10)})}function m(){p.setAttribute("width",window.innerWidth),p.setAttribute("height",window.innerHeight),y=parseInt(p.getAttribute("width")),b=parseInt(p.getAttribute("height"))}function g(){m(),v(20),window.requestAnimationFrame(f)}Object.defineProperty(t,"__esModule",{value:!0});var p=document.getElementById("nokey"),y=parseInt(p.getAttribute("width")),b=parseInt(p.getAttribute("height")),w=p.getContext("2d"),x={r:230,g:230,b:230},P=2,E=[],M=.03,L=.8,A=260,k=!1,T={x:0,y:0,vx:0,vy:0,r:0,type:"mouse"};console.log(i(0,10)),window.addEventListener("resize",function(e){console.log("Window Resize..."),m()}),t["default"]=g,p.addEventListener("mouseenter",function(){console.log("mouseenter"),k=!0,E.push(T)}),p.addEventListener("mouseleave",function(){console.log("mouseleave"),k=!1;var e=[];Array.prototype.forEach.call(E,function(t){t.hasOwnProperty("type")||e.push(t)}),E=e.slice(0)}),p.addEventListener("mousemove",function(e){var e=e||window.event;T.x=e.pageX,T.y=e.pageY})},function(e,t,n){"use strict";function o(e,t){return!!e.className.match(new RegExp("(\\s|^)"+t+"(\\s|$)"))}function r(e,t){o(e,t)||(e.className+=" "+t)}function i(e,t){if(o(e,t)){var n=new RegExp("(\\s|^)"+t+"(\\s|$)");e.className=e.className.replace(n," ")}}function a(){document.getElementById("panel-toggle").addEventListener("click",u)}function u(){var e=document.getElementById("work-panel");o(e,"open")?i(e,"open"):r(e,"open")}document.addEventListener("readystatechange",function(){"complete"===document.readyState&&a()})},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=null,r=!1,i=null,a=null,u=null,l=null,c=null,s=t.init=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return m(e)!==!1&&((e.detectMobile!==!0||h()!==!0)&&(u=e,window.addEventListener("resize",E),d(u)))},d=function(e){l=g(),c=[];for(var t=0;t<e.elements.length;++t){var n=e.elements[t],r=p(n,l,t);c.push(r)}var i=l.width>=e.minWidth&&l.height>=e.minHeight,a=l.width<e.minWidth||l.height<e.minHeight;return i!==!0||o!==!1&&null!==o?a!==!0||o!==!0&&null!==o?void 0:x(e):w(e)},h=function(){return/Android|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent||navigator.vendor||window.opera)},f=function(e,t,n,o){return e/=o,-n*e*(e-2)+t},v=function(e,t){return e<0&&(e=0),e>t-1&&(e=t-1),e},m=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return null==e.elements?(console.error("Elements missing: opts.elements"),!1):null==e.minWidth||e.minWidth<0?(console.error("Property missing or not a number: opts.minWidth"),!1):null==e.minHeight||e.minHeight<0?(console.error("Property missing or not a number: opts.minHeight"),!1):(e.detectMobile!==!1&&(e.detectMobile=!0),(null==e.duration||e.duration<0)&&(e.duration=20),null==e.timing&&(e.timing=f),e.keyboard!==!1&&(e.keyboard=!0),!0)},g=function(){var e=document.body.getBoundingClientRect(),t={width:window.innerWidth,height:window.innerHeight};return{top:e.top*-1,maxTop:e.height-t.height,bottom:e.top*-1+t.height,width:t.width,height:t.height}},p=function(e,t,n){if(null==e)return!1;var o={index:n,active:!1,top:e.offsetTop,bottom:e.offsetTop+e.offsetHeight,height:e.offsetHeight,dom:e};return o.visiblePercentage=y(o,t).vP,o},y=function(e,t){var n=0,o=0,r=0,i=0;return n=t.top>e.top?t.top:e.top,o=t.bottom>e.bottom?e.bottom:t.bottom,r=o-n,i=100/e.height*r,r<0&&(r=0),i<0&&(i=0),{vH:r,vP:i}},b=function(e,t){function n(){var e=s-f(l,0,d,h);document.body.scrollTop=e,document.documentElement.scrollTop=e,l>=h||document.body.scrollTop===t.maxTop&&0!==l?r=!1:(l++,requestAnimationFrame(n))}for(var o=e.dom,i=0;i<c.length;++i){var a=c[i];a.dom.classList.remove("active"),a.active=!1}o.classList.add("active"),e.active=!0;var l=0,s=-document.body.getBoundingClientRect().top,d=s-e.top,h=u.duration,f=u.timing;return n(),!0},w=function(e){o=!0,window.addEventListener("wheel",M),e.keyboard===!0&&document.body.addEventListener("keydown",P);for(var t=0;t<c.length;++t)c[t].dom.classList.remove("active");return A()},x=function(e){o=!1,window.removeEventListener("wheel",M),e.keyboard===!0&&document.body.removeEventListener("keydown",P);for(var t=0;t<c.length;++t)c[t].dom.classList.add("active");return!0},P=function(e){var t=e.keyCode,n=0;if(38!==t&&40!==t)return!0;if(r===!0)return!1;r=!0;for(var o=0;o<c.length;++o)c[o].active===!0&&(n=o);return 38===t?n+=-1:40===t&&(n+=1),n=v(n,c.length),b(c[n],l),e.preventDefault(),!1},E=function(){return clearTimeout(a),a=setTimeout(function(){return s(u)},200),!0},M=function(e){return r!==!0&&(clearTimeout(i),i=setTimeout(function(){return L(e)},200),!0)},L=function(e){r=!0;var t=0,n={},o=null,i=9.807;"wheel"===e.type&&(t=e.deltaY),t=t>0?1:-1,l=g(),c=[];for(var a=0;a<u.elements.length;++a){var s=u.elements[a],d=p(s,l,a);c.push(d),(null==n.visiblePercentage||d.visiblePercentage>n.visiblePercentage)&&(n=d)}o=n.index+t,o=v(o,c.length),c[o].visiblePercentage*=i;for(var h=0;h<c.length;++h){var f=c[h];f.visiblePercentage>n.visiblePercentage&&(n=f)}return b(n,l)},A=function(){r=!0;for(var e=null,t=0;t<u.elements.length;++t){var n=c[t];l.top>=n.top&&(e=n)}return b(e,l)}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdHMuanMiXSwibmFtZXMiOlsibW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImluc3RhbGxlZE1vZHVsZXMiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImNvbmZpZ3VyYWJsZSIsImVudW1lcmFibGUiLCJnZXQiLCJuIiwiX19lc01vZHVsZSIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJvYmoiLCJkZWZhdWx0IiwiX2NhbnZhc0JhbGwiLCJfY2FudmFzQmFsbDIiLCJfbWVudSIsInNjcm9sbFNuYXAiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJpbml0IiwiZWxlbWVudHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwibWluV2lkdGgiLCJtaW5IZWlnaHQiLCJkZXRlY3RNb2JpbGUiLCJrZXlib2FyZCIsImR1cmF0aW9uIiwidGltaW5nIiwiX3RpbWluZyIsImdldFJhbmRvbVNwZWVkIiwicG9zIiwibWluIiwibWF4IiwicmFuZG9tTnVtRnJvbSIsInJhbmRvbUFycmF5SXRlbSIsImFyciIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsImxlbmd0aCIsImdldFJhbmRvbUJhbGwiLCJ4IiwicmFuZG9tU2lkZVBvcyIsImNhbl93IiwieSIsIlIiLCJ2eCIsInZ5IiwiciIsImFscGhhIiwicGhhc2UiLCJjYW5faCIsImNlaWwiLCJyZW5kZXJCYWxscyIsIkFycmF5IiwiZm9yRWFjaCIsImJhbGxzIiwiYiIsImN0eCIsImZpbGxTdHlsZSIsImJhbGxfY29sb3IiLCJnIiwiYmVnaW5QYXRoIiwiYXJjIiwiUEkiLCJjbG9zZVBhdGgiLCJmaWxsIiwidXBkYXRlQmFsbHMiLCJuZXdfYmFsbHMiLCJwdXNoIiwiYWxwaGFfZiIsImFicyIsImNvcyIsInNsaWNlIiwicmVuZGVyTGluZXMiLCJmcmFjdGlvbiIsImoiLCJnZXREaXNPZiIsImRpc19saW1pdCIsInRvU3RyaW5nIiwic3Ryb2tlU3R5bGUiLCJsaW5lV2lkdGgiLCJsaW5rX2xpbmVfd2lkdGgiLCJtb3ZlVG8iLCJsaW5lVG8iLCJzdHJva2UiLCJiMSIsImIyIiwiZGVsdGFfeCIsImRlbHRhX3kiLCJzcXJ0IiwiYWRkQmFsbElmeSIsInJlbmRlciIsImNsZWFyUmVjdCIsIndpbmRvdyIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImluaXRCYWxscyIsIm51bSIsImluaXRDYW52YXMiLCJjYW52YXMiLCJzZXRBdHRyaWJ1dGUiLCJpbm5lcldpZHRoIiwiaW5uZXJIZWlnaHQiLCJwYXJzZUludCIsImdldEF0dHJpYnV0ZSIsImdvTW92aWUiLCJ2YWx1ZSIsImdldEVsZW1lbnRCeUlkIiwiZ2V0Q29udGV4dCIsIm1vdXNlX2luIiwibW91c2VfYmFsbCIsInR5cGUiLCJjb25zb2xlIiwibG9nIiwiZSIsImV2ZW50IiwicGFnZVgiLCJwYWdlWSIsImhhc0NsYXNzIiwiZWxlIiwiY2xzIiwiY2xhc3NOYW1lIiwibWF0Y2giLCJSZWdFeHAiLCJhZGRDbGFzcyIsInJlbW92ZUNsYXNzIiwicmVnIiwicmVwbGFjZSIsInRvZ2dsZU1lbnUiLCJyZWFkeVN0YXRlIiwib24iLCJhbmltYXRpbmciLCJzY3JvbGxUaW1lciIsInJlc2l6ZVRpbWVyIiwiY29tcHV0ZWRPcHRzIiwiY29tcHV0ZWRXaW5kb3ciLCJjb21wdXRlZEVsZW1lbnRzIiwib3B0cyIsImFyZ3VtZW50cyIsInVuZGVmaW5lZCIsInZhbGlkIiwiaXNNb2JpbGUiLCJvblJlc2l6ZSIsIl9pbml0IiwiZ2V0V2luZG93TWV0cmljcyIsImVsZW1lbnQiLCJlbGVtZW50TWV0cmljcyIsImdldEVsZW1lbnRNZXRyaWNzIiwiaXNCaWciLCJ3aWR0aCIsImhlaWdodCIsImlzU21hbGwiLCJzdG9wIiwic3RhcnQiLCJ0ZXN0IiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwidmVuZG9yIiwib3BlcmEiLCJ0Iiwibm9ybWFsaXplUG9zaXRpb24iLCJuZXdQb3MiLCJtYXhQb3MiLCJlcnJvciIsImJvdW5kaW5nQ2xpZW50UmVjdCIsImJvZHkiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJ3aW5kb3dTaXplIiwidG9wIiwibWF4VG9wIiwiYm90dG9tIiwiZWxlbSIsIndpbmRvd01ldHJpY3MiLCJpbmRleCIsImFjdGl2ZSIsIm9mZnNldFRvcCIsIm9mZnNldEhlaWdodCIsImRvbSIsInZpc2libGVQZXJjZW50YWdlIiwiZ2V0RWxlbWVudFZpc2libGVQZXJjZW50YWdlIiwidlAiLCJzUCIsImVQIiwidkgiLCJzZXRFbGVtZW50VmlzaWJsZSIsImFuaW1hdGlvbiIsIm5ld1Njcm9sbFRvcCIsInN0YXJ0U2Nyb2xsVG9wIiwiY3VycmVudEZyYW1lIiwiZGlmZmVyZW5jZSIsInNjcm9sbFRvcCIsImRvY3VtZW50RWxlbWVudCIsIl9lbGVtZW50TWV0cmljcyIsImNsYXNzTGlzdCIsInJlbW92ZSIsImFkZCIsIm9uU2Nyb2xsIiwib25LZXlkb3duIiwic2Nyb2xsVG9OZWFyZXN0IiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImtleSIsImtleUNvZGUiLCJwcmV2ZW50RGVmYXVsdCIsImNsZWFyVGltZW91dCIsInNldFRpbWVvdXQiLCJzY3JvbGxUbyIsImRpcmVjdGlvbiIsInRvcEVsZW1lbnQiLCJuZXh0RWxlbWVudE51bSIsImdyYXZpdGF0aW9uIiwiZGVsdGFZIiwiX2kiLCJfZWxlbWVudE1ldHJpY3MyIiwibmV4dEVsZW1lbnRNZXRyaWNzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztDQUFBLFNBQUFBLEdBS0EsUUFBQUMsR0FBQUMsR0FHQSxHQUFBQyxFQUFBRCxHQUNBLE1BQUFDLEdBQUFELEdBQUFFLE9BR0EsSUFBQUMsR0FBQUYsRUFBQUQsSUFDQUksRUFBQUosRUFDQUssR0FBQSxFQUNBSCxXQVVBLE9BTkFKLEdB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LEdBQUEsRUFBQUEsRUFBQTNFLEVBQUFqRyxTQUFBNEssRUFBQSxDQUVBLEdBQUFDLEdBQUE1RSxFQUFBMkUsRUFFQUMsR0FBQWxDLGtCQUFBNkIsRUFBQTdCLG9CQUFBNkIsRUFBQUssR0FHQSxNQUFBNUIsR0FBQXVCLEVBQUF4RSxJQUdBK0QsRUFBQSxXQUVBbkUsR0FBQSxDQUlBLEtBQUEsR0FGQWtGLEdBQUEsS0FFQWpPLEVBQUEsRUFBQUEsRUFBQWtKLEVBQUFsSCxTQUFBbUIsU0FBQW5ELEVBQUEsQ0FFQSxHQUFBOEosR0FBQVYsRUFBQXBKLEVBRUFtSixHQUFBaUMsS0FBQXRCLEVBQUFzQixNQUFBNkMsRUFBQW5FLEdBR0EsTUFBQXNDLEdBQUE2QixFQUFBOUUiLCJmaWxlIjoic2NyaXB0cy5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKioqKioqLyAoZnVuY3Rpb24obW9kdWxlcykgeyAvLyB3ZWJwYWNrQm9vdHN0cmFwXG4vKioqKioqLyBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbi8qKioqKiovIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4vKioqKioqLyBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcbi8qKioqKiovXG4vKioqKioqLyBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4vKioqKioqLyBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbi8qKioqKiovIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuLyoqKioqKi8gXHRcdH1cbi8qKioqKiovIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuLyoqKioqKi8gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbi8qKioqKiovIFx0XHRcdGk6IG1vZHVsZUlkLFxuLyoqKioqKi8gXHRcdFx0bDogZmFsc2UsXG4vKioqKioqLyBcdFx0XHRleHBvcnRzOiB7fVxuLyoqKioqKi8gXHRcdH07XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuLyoqKioqKi8gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4vKioqKioqLyBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuLyoqKioqKi8gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbi8qKioqKiovIFx0fVxuLyoqKioqKi9cbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuLyoqKioqKi8gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbi8qKioqKiovIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7XG4vKioqKioqLyBcdFx0XHRcdGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4vKioqKioqLyBcdFx0XHRcdGVudW1lcmFibGU6IHRydWUsXG4vKioqKioqLyBcdFx0XHRcdGdldDogZ2V0dGVyXG4vKioqKioqLyBcdFx0XHR9KTtcbi8qKioqKiovIFx0XHR9XG4vKioqKioqLyBcdH07XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbi8qKioqKiovIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbi8qKioqKiovIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4vKioqKioqLyBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuLyoqKioqKi8gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbi8qKioqKiovIFx0XHRyZXR1cm4gZ2V0dGVyO1xuLyoqKioqKi8gXHR9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbi8qKioqKiovIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMCk7XG4vKioqKioqLyB9KVxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKiovIChbXG4vKiAwICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5cbnZhciBfY2FudmFzQmFsbCA9IF9fd2VicGFja19yZXF1aXJlX18oMSk7XG5cbnZhciBfY2FudmFzQmFsbDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jYW52YXNCYWxsKTtcblxudmFyIF9tZW51ID0gX193ZWJwYWNrX3JlcXVpcmVfXygyKTtcblxudmFyIF9tZW51MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX21lbnUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyBlc2xpbnQtZGlzYWJsZS1saW5lXG52YXIgc2Nyb2xsU25hcCA9IF9fd2VicGFja19yZXF1aXJlX18oMyk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmVcblxuKDAsIF9jYW52YXNCYWxsMi5kZWZhdWx0KSgpO1xuXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgZnVuY3Rpb24gKCkge1xuICBzY3JvbGxTbmFwLmluaXQoe1xuXG4gICAgLy8gTm9kZUxpc3Qgb2Ygc25hcC1lbGVtZW50cyAocmVxdWlyZWQpXG4gICAgLy8gc2Nyb2xsU25hcCBhbHdheXMgc25hcHMgdG8gdGhlIG5lYXJlc3QgZWxlbWVudFxuICAgIGVsZW1lbnRzOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdzZWN0aW9uJyksXG5cbiAgICAvLyBJbnRlZ2VyIC0gU2V0IGEgbWluaW11bSB3aW5kb3ctc2l6ZSAocmVxdWlyZWQpXG4gICAgLy8gc2Nyb2xsU25hcCB3aWxsIGJlIGRlYWN0aXZhdGVkIHdoZW4gdGhlIHdpbmRvdyBpcyBzbWFsbGVyIHRoYW4gdGhlIGdpdmVuIGRpbWVuc2lvbnNcbiAgICBtaW5XaWR0aDogNjAwLFxuICAgIG1pbkhlaWdodDogNDAwLFxuXG4gICAgLy8gQm9vbGVhbiAtIERlYWN0aXZhdGUgc2Nyb2xsU25hcCBvbiBtb2JpbGUgZGV2aWNlcyAob3B0aW9uYWwpXG4gICAgZGV0ZWN0TW9iaWxlOiB0cnVlLFxuXG4gICAgLy8gQm9vbGVhbiAtIEtleWJvYXJkLW5hdmlnYXRpb24gKG9wdGlvbmFsKVxuICAgIGtleWJvYXJkOiB0cnVlLFxuXG4gICAgLy8gSW50ZWdlciAtIFNuYXAtYW5pbWF0aW9uLXNwZWVkIChvcHRpb25hbClcbiAgICAvLyBIaWdoZXIgPSBzbG93ZXJcbiAgICBkdXJhdGlvbjogMjAsXG5cbiAgICAvLyBGdW5jdGlvbiAtIFNldCBhIGN1c3RvbSB0aW1pbmctZnVuY3Rpb24gZm9yIHRoZSBzbmFwLWFuaW1hdGlvbiAob3B0aW9uYWwpXG4gICAgdGltaW5nOiBzY3JvbGxTbmFwLl90aW1pbmdcblxuICB9KTtcbn0pO1xuXG4vKioqLyB9KSxcbi8qIDEgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbnZhciBjYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbm9rZXknKSxcbiAgICBjYW5fdyA9IHBhcnNlSW50KGNhbnZhcy5nZXRBdHRyaWJ1dGUoJ3dpZHRoJykpLFxuICAgIGNhbl9oID0gcGFyc2VJbnQoY2FudmFzLmdldEF0dHJpYnV0ZSgnaGVpZ2h0JykpLFxuICAgIGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpO1xuXG4vLyBjb25zb2xlLmxvZyh0eXBlb2YgY2FuX3cpO1xuXG52YXIgYmFsbCA9IHtcbiAgeDogMCxcbiAgeTogMCxcbiAgdng6IDAsXG4gIHZ5OiAwLFxuICByOiAwLFxuICBhbHBoYTogMSxcbiAgcGhhc2U6IDBcbn0sXG4gICAgYmFsbF9jb2xvciA9IHtcbiAgcjogMjMwLFxuICBnOiAyMzAsXG4gIGI6IDIzMFxufSxcbiAgICBSID0gMixcbiAgICBiYWxscyA9IFtdLFxuICAgIGFscGhhX2YgPSAwLjAzLFxuICAgIGFscGhhX3BoYXNlID0gMCxcblxuXG4vLyBMaW5lXG5saW5rX2xpbmVfd2lkdGggPSAwLjgsXG4gICAgZGlzX2xpbWl0ID0gMjYwLFxuICAgIGFkZF9tb3VzZV9wb2ludCA9IHRydWUsXG4gICAgbW91c2VfaW4gPSBmYWxzZSxcbiAgICBtb3VzZV9iYWxsID0ge1xuICB4OiAwLFxuICB5OiAwLFxuICB2eDogMCxcbiAgdnk6IDAsXG4gIHI6IDAsXG4gIHR5cGU6ICdtb3VzZSdcbn07XG5cbi8vIFJhbmRvbSBzcGVlZFxuZnVuY3Rpb24gZ2V0UmFuZG9tU3BlZWQocG9zKSB7XG4gIHZhciBtaW4gPSAtMSxcbiAgICAgIG1heCA9IDE7XG4gIHN3aXRjaCAocG9zKSB7XG4gICAgY2FzZSAndG9wJzpcbiAgICAgIHJldHVybiBbcmFuZG9tTnVtRnJvbShtaW4sIG1heCksIHJhbmRvbU51bUZyb20oMC4xLCBtYXgpXTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3JpZ2h0JzpcbiAgICAgIHJldHVybiBbcmFuZG9tTnVtRnJvbShtaW4sIC0wLjEpLCByYW5kb21OdW1Gcm9tKG1pbiwgbWF4KV07XG4gICAgICBicmVhaztcbiAgICBjYXNlICdib3R0b20nOlxuICAgICAgcmV0dXJuIFtyYW5kb21OdW1Gcm9tKG1pbiwgbWF4KSwgcmFuZG9tTnVtRnJvbShtaW4sIC0wLjEpXTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ2xlZnQnOlxuICAgICAgcmV0dXJuIFtyYW5kb21OdW1Gcm9tKDAuMSwgbWF4KSwgcmFuZG9tTnVtRnJvbShtaW4sIG1heCldO1xuICAgICAgYnJlYWs7XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybjtcbiAgICAgIGJyZWFrO1xuICB9XG59XG5mdW5jdGlvbiByYW5kb21BcnJheUl0ZW0oYXJyKSB7XG4gIHJldHVybiBhcnJbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogYXJyLmxlbmd0aCldO1xufVxuZnVuY3Rpb24gcmFuZG9tTnVtRnJvbShtaW4sIG1heCkge1xuICByZXR1cm4gTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4pICsgbWluO1xufVxuY29uc29sZS5sb2cocmFuZG9tTnVtRnJvbSgwLCAxMCkpO1xuLy8gUmFuZG9tIEJhbGxcbmZ1bmN0aW9uIGdldFJhbmRvbUJhbGwoKSB7XG4gIHZhciBwb3MgPSByYW5kb21BcnJheUl0ZW0oWyd0b3AnLCAncmlnaHQnLCAnYm90dG9tJywgJ2xlZnQnXSk7XG4gIHN3aXRjaCAocG9zKSB7XG4gICAgY2FzZSAndG9wJzpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHg6IHJhbmRvbVNpZGVQb3MoY2FuX3cpLFxuICAgICAgICB5OiAtUixcbiAgICAgICAgdng6IGdldFJhbmRvbVNwZWVkKCd0b3AnKVswXSxcbiAgICAgICAgdnk6IGdldFJhbmRvbVNwZWVkKCd0b3AnKVsxXSxcbiAgICAgICAgcjogUixcbiAgICAgICAgYWxwaGE6IDEsXG4gICAgICAgIHBoYXNlOiByYW5kb21OdW1Gcm9tKDAsIDEwKVxuICAgICAgfTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3JpZ2h0JzpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHg6IGNhbl93ICsgUixcbiAgICAgICAgeTogcmFuZG9tU2lkZVBvcyhjYW5faCksXG4gICAgICAgIHZ4OiBnZXRSYW5kb21TcGVlZCgncmlnaHQnKVswXSxcbiAgICAgICAgdnk6IGdldFJhbmRvbVNwZWVkKCdyaWdodCcpWzFdLFxuICAgICAgICByOiBSLFxuICAgICAgICBhbHBoYTogMSxcbiAgICAgICAgcGhhc2U6IHJhbmRvbU51bUZyb20oMCwgMTApXG4gICAgICB9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnYm90dG9tJzpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHg6IHJhbmRvbVNpZGVQb3MoY2FuX3cpLFxuICAgICAgICB5OiBjYW5faCArIFIsXG4gICAgICAgIHZ4OiBnZXRSYW5kb21TcGVlZCgnYm90dG9tJylbMF0sXG4gICAgICAgIHZ5OiBnZXRSYW5kb21TcGVlZCgnYm90dG9tJylbMV0sXG4gICAgICAgIHI6IFIsXG4gICAgICAgIGFscGhhOiAxLFxuICAgICAgICBwaGFzZTogcmFuZG9tTnVtRnJvbSgwLCAxMClcbiAgICAgIH07XG4gICAgICBicmVhaztcbiAgICBjYXNlICdsZWZ0JzpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHg6IC1SLFxuICAgICAgICB5OiByYW5kb21TaWRlUG9zKGNhbl9oKSxcbiAgICAgICAgdng6IGdldFJhbmRvbVNwZWVkKCdsZWZ0JylbMF0sXG4gICAgICAgIHZ5OiBnZXRSYW5kb21TcGVlZCgnbGVmdCcpWzFdLFxuICAgICAgICByOiBSLFxuICAgICAgICBhbHBoYTogMSxcbiAgICAgICAgcGhhc2U6IHJhbmRvbU51bUZyb20oMCwgMTApXG4gICAgICB9O1xuICAgICAgYnJlYWs7XG4gIH1cbn1cbmZ1bmN0aW9uIHJhbmRvbVNpZGVQb3MobGVuZ3RoKSB7XG4gIHJldHVybiBNYXRoLmNlaWwoTWF0aC5yYW5kb20oKSAqIGxlbmd0aCk7XG59XG5cbi8vIERyYXcgQmFsbFxuZnVuY3Rpb24gcmVuZGVyQmFsbHMoKSB7XG4gIEFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwoYmFsbHMsIGZ1bmN0aW9uIChiKSB7XG4gICAgaWYgKCFiLmhhc093blByb3BlcnR5KCd0eXBlJykpIHtcbiAgICAgIGN0eC5maWxsU3R5bGUgPSAncmdiYSgnICsgYmFsbF9jb2xvci5yICsgJywnICsgYmFsbF9jb2xvci5nICsgJywnICsgYmFsbF9jb2xvci5iICsgJywnICsgYi5hbHBoYSArICcpJztcbiAgICAgIGN0eC5iZWdpblBhdGgoKTtcbiAgICAgIGN0eC5hcmMoYi54LCBiLnksIFIsIDAsIE1hdGguUEkgKiAyLCB0cnVlKTtcbiAgICAgIGN0eC5jbG9zZVBhdGgoKTtcbiAgICAgIGN0eC5maWxsKCk7XG4gICAgfVxuICB9KTtcbn1cblxuLy8gVXBkYXRlIGJhbGxzXG5mdW5jdGlvbiB1cGRhdGVCYWxscygpIHtcbiAgdmFyIG5ld19iYWxscyA9IFtdO1xuICBBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKGJhbGxzLCBmdW5jdGlvbiAoYikge1xuICAgIGIueCArPSBiLnZ4O1xuICAgIGIueSArPSBiLnZ5O1xuXG4gICAgaWYgKGIueCA+IC01MCAmJiBiLnggPCBjYW5fdyArIDUwICYmIGIueSA+IC01MCAmJiBiLnkgPCBjYW5faCArIDUwKSB7XG4gICAgICBuZXdfYmFsbHMucHVzaChiKTtcbiAgICB9XG5cbiAgICAvLyBhbHBoYSBjaGFuZ2VcbiAgICBiLnBoYXNlICs9IGFscGhhX2Y7XG4gICAgYi5hbHBoYSA9IE1hdGguYWJzKE1hdGguY29zKGIucGhhc2UpKTtcbiAgICAvLyBjb25zb2xlLmxvZyhiLmFscGhhKTtcbiAgfSk7XG5cbiAgYmFsbHMgPSBuZXdfYmFsbHMuc2xpY2UoMCk7XG59XG5cbi8vIGxvb3AgYWxwaGFcbmZ1bmN0aW9uIGxvb3BBbHBoYUluZigpIHt9XG5cbi8vIERyYXcgbGluZXNcbmZ1bmN0aW9uIHJlbmRlckxpbmVzKCkge1xuICB2YXIgZnJhY3Rpb24sIGFscGhhO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGJhbGxzLmxlbmd0aDsgaSsrKSB7XG4gICAgZm9yICh2YXIgaiA9IGkgKyAxOyBqIDwgYmFsbHMubGVuZ3RoOyBqKyspIHtcblxuICAgICAgZnJhY3Rpb24gPSBnZXREaXNPZihiYWxsc1tpXSwgYmFsbHNbal0pIC8gZGlzX2xpbWl0O1xuXG4gICAgICBpZiAoZnJhY3Rpb24gPCAxKSB7XG4gICAgICAgIGFscGhhID0gKDEgLSBmcmFjdGlvbikudG9TdHJpbmcoKTtcblxuICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSAncmdiYSgxNTAsMTUwLDE1MCwnICsgYWxwaGEgKyAnKSc7XG4gICAgICAgIGN0eC5saW5lV2lkdGggPSBsaW5rX2xpbmVfd2lkdGg7XG5cbiAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xuICAgICAgICBjdHgubW92ZVRvKGJhbGxzW2ldLngsIGJhbGxzW2ldLnkpO1xuICAgICAgICBjdHgubGluZVRvKGJhbGxzW2pdLngsIGJhbGxzW2pdLnkpO1xuICAgICAgICBjdHguc3Ryb2tlKCk7XG4gICAgICAgIGN0eC5jbG9zZVBhdGgoKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLy8gY2FsY3VsYXRlIGRpc3RhbmNlIGJldHdlZW4gdHdvIHBvaW50c1xuZnVuY3Rpb24gZ2V0RGlzT2YoYjEsIGIyKSB7XG4gIHZhciBkZWx0YV94ID0gTWF0aC5hYnMoYjEueCAtIGIyLngpLFxuICAgICAgZGVsdGFfeSA9IE1hdGguYWJzKGIxLnkgLSBiMi55KTtcblxuICByZXR1cm4gTWF0aC5zcXJ0KGRlbHRhX3ggKiBkZWx0YV94ICsgZGVsdGFfeSAqIGRlbHRhX3kpO1xufVxuXG4vLyBhZGQgYmFsbHMgaWYgdGhlcmUgYSBsaXR0bGUgYmFsbHNcbmZ1bmN0aW9uIGFkZEJhbGxJZnkoKSB7XG4gIGlmIChiYWxscy5sZW5ndGggPCAyMCkge1xuICAgIGJhbGxzLnB1c2goZ2V0UmFuZG9tQmFsbCgpKTtcbiAgfVxufVxuXG4vLyBSZW5kZXJcbmZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgY3R4LmNsZWFyUmVjdCgwLCAwLCBjYW5fdywgY2FuX2gpO1xuXG4gIHJlbmRlckJhbGxzKCk7XG5cbiAgcmVuZGVyTGluZXMoKTtcblxuICB1cGRhdGVCYWxscygpO1xuXG4gIGFkZEJhbGxJZnkoKTtcblxuICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKHJlbmRlcik7XG59XG5cbi8vIEluaXQgQmFsbHNcbmZ1bmN0aW9uIGluaXRCYWxscyhudW0pIHtcbiAgZm9yICh2YXIgaSA9IDE7IGkgPD0gbnVtOyBpKyspIHtcbiAgICBiYWxscy5wdXNoKHtcbiAgICAgIHg6IHJhbmRvbVNpZGVQb3MoY2FuX3cpLFxuICAgICAgeTogcmFuZG9tU2lkZVBvcyhjYW5faCksXG4gICAgICB2eDogZ2V0UmFuZG9tU3BlZWQoJ3RvcCcpWzBdLFxuICAgICAgdnk6IGdldFJhbmRvbVNwZWVkKCd0b3AnKVsxXSxcbiAgICAgIHI6IFIsXG4gICAgICBhbHBoYTogMSxcbiAgICAgIHBoYXNlOiByYW5kb21OdW1Gcm9tKDAsIDEwKVxuICAgIH0pO1xuICB9XG59XG4vLyBJbml0IENhbnZhc1xuZnVuY3Rpb24gaW5pdENhbnZhcygpIHtcbiAgY2FudmFzLnNldEF0dHJpYnV0ZSgnd2lkdGgnLCB3aW5kb3cuaW5uZXJXaWR0aCk7XG4gIGNhbnZhcy5zZXRBdHRyaWJ1dGUoJ2hlaWdodCcsIHdpbmRvdy5pbm5lckhlaWdodCk7XG5cbiAgY2FuX3cgPSBwYXJzZUludChjYW52YXMuZ2V0QXR0cmlidXRlKCd3aWR0aCcpKTtcbiAgY2FuX2ggPSBwYXJzZUludChjYW52YXMuZ2V0QXR0cmlidXRlKCdoZWlnaHQnKSk7XG59XG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgZnVuY3Rpb24gKGUpIHtcbiAgY29uc29sZS5sb2coJ1dpbmRvdyBSZXNpemUuLi4nKTtcbiAgaW5pdENhbnZhcygpO1xufSk7XG5cbmZ1bmN0aW9uIGdvTW92aWUoKSB7XG4gIGluaXRDYW52YXMoKTtcbiAgaW5pdEJhbGxzKDIwKTtcbiAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZShyZW5kZXIpO1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gZ29Nb3ZpZTtcblxuLy8gTW91c2UgZWZmZWN0XG5cbmNhbnZhcy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWVudGVyJywgZnVuY3Rpb24gKCkge1xuICBjb25zb2xlLmxvZygnbW91c2VlbnRlcicpO1xuICBtb3VzZV9pbiA9IHRydWU7XG4gIGJhbGxzLnB1c2gobW91c2VfYmFsbCk7XG59KTtcbmNhbnZhcy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWxlYXZlJywgZnVuY3Rpb24gKCkge1xuICBjb25zb2xlLmxvZygnbW91c2VsZWF2ZScpO1xuICBtb3VzZV9pbiA9IGZhbHNlO1xuICB2YXIgbmV3X2JhbGxzID0gW107XG4gIEFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwoYmFsbHMsIGZ1bmN0aW9uIChiKSB7XG4gICAgaWYgKCFiLmhhc093blByb3BlcnR5KCd0eXBlJykpIHtcbiAgICAgIG5ld19iYWxscy5wdXNoKGIpO1xuICAgIH1cbiAgfSk7XG4gIGJhbGxzID0gbmV3X2JhbGxzLnNsaWNlKDApO1xufSk7XG5jYW52YXMuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgZnVuY3Rpb24gKGUpIHtcbiAgdmFyIGUgPSBlIHx8IHdpbmRvdy5ldmVudDtcbiAgbW91c2VfYmFsbC54ID0gZS5wYWdlWDtcbiAgbW91c2VfYmFsbC55ID0gZS5wYWdlWTtcbiAgLy8gY29uc29sZS5sb2cobW91c2VfYmFsbCk7XG59KTtcblxuLyoqKi8gfSksXG4vKiAyICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5cbi8vQHJheml0YXppIHNyYzogaHR0cDovL2NvZGVwZW4uaW8vcmF6aXRhemkvcGVuL1diWmFPcSAqL1xuXG4vL0V4ZWxlbnQgbGl0dGxlIGZ1bmN0aW9ucyB0byB1c2UgYW55IHRpbWUgd2hlbiBjbGFzcyBtb2RpZmljYXRpb24gaXMgbmVlZGVkXG5mdW5jdGlvbiBoYXNDbGFzcyhlbGUsIGNscykge1xuICAgIHJldHVybiAhIWVsZS5jbGFzc05hbWUubWF0Y2gobmV3IFJlZ0V4cCgnKFxcXFxzfF4pJyArIGNscyArICcoXFxcXHN8JCknKSk7XG59XG5cbmZ1bmN0aW9uIGFkZENsYXNzKGVsZSwgY2xzKSB7XG4gICAgaWYgKCFoYXNDbGFzcyhlbGUsIGNscykpIGVsZS5jbGFzc05hbWUgKz0gXCIgXCIgKyBjbHM7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZUNsYXNzKGVsZSwgY2xzKSB7XG4gICAgaWYgKGhhc0NsYXNzKGVsZSwgY2xzKSkge1xuICAgICAgICB2YXIgcmVnID0gbmV3IFJlZ0V4cCgnKFxcXFxzfF4pJyArIGNscyArICcoXFxcXHN8JCknKTtcbiAgICAgICAgZWxlLmNsYXNzTmFtZSA9IGVsZS5jbGFzc05hbWUucmVwbGFjZShyZWcsICcgJyk7XG4gICAgfVxufVxuXG4vL0FkZCBldmVudCBmcm9tIGpzIHRoZSBrZWVwIHRoZSBtYXJrdXAgY2xlYW5cbmZ1bmN0aW9uIGluaXQoKSB7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwYW5lbC10b2dnbGVcIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRvZ2dsZU1lbnUpO1xufVxuXG4vL1RoZSBhY3R1YWwgZnVjdGlvblxuZnVuY3Rpb24gdG9nZ2xlTWVudSgpIHtcbiAgICB2YXIgZWxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ3b3JrLXBhbmVsXCIpO1xuICAgIGlmICghaGFzQ2xhc3MoZWxlLCBcIm9wZW5cIikpIHtcbiAgICAgICAgYWRkQ2xhc3MoZWxlLCBcIm9wZW5cIik7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmVtb3ZlQ2xhc3MoZWxlLCBcIm9wZW5cIik7XG4gICAgfVxufVxuXG4vL1ByZXZlbnQgdGhlIGZ1bmN0aW9uIHRvIHJ1biBiZWZvcmUgdGhlIGRvY3VtZW50IGlzIGxvYWRlZFxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigncmVhZHlzdGF0ZWNoYW5nZScsIGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoZG9jdW1lbnQucmVhZHlTdGF0ZSA9PT0gXCJjb21wbGV0ZVwiKSB7XG4gICAgICAgIGluaXQoKTtcbiAgICB9XG59KTtcblxuLyoqKi8gfSksXG4vKiAzICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuXHR2YWx1ZTogdHJ1ZVxufSk7XG52YXIgb24gPSBudWxsO1xudmFyIGFuaW1hdGluZyA9IGZhbHNlO1xuXG52YXIgc2Nyb2xsVGltZXIgPSBudWxsO1xudmFyIHJlc2l6ZVRpbWVyID0gbnVsbDtcblxudmFyIGNvbXB1dGVkT3B0cyA9IG51bGw7XG52YXIgY29tcHV0ZWRXaW5kb3cgPSBudWxsO1xudmFyIGNvbXB1dGVkRWxlbWVudHMgPSBudWxsO1xuXG52YXIgaW5pdCA9IGV4cG9ydHMuaW5pdCA9IGZ1bmN0aW9uIGluaXQoKSB7XG5cdHZhciBvcHRzID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcblxuXG5cdC8vIENoZWNrIGlmIG9wdHMgaW5jbHVkZXMgYWxsIHJlcXVpcmVkIHByb3BlcnRpZXNcblx0aWYgKHZhbGlkKG9wdHMpID09PSBmYWxzZSkgcmV0dXJuIGZhbHNlO1xuXG5cdC8vIERpc2FibGUgb24gbW9iaWxlIGRldmljZXNcblx0aWYgKG9wdHMuZGV0ZWN0TW9iaWxlID09PSB0cnVlICYmIGlzTW9iaWxlKCkgPT09IHRydWUpIHJldHVybiBmYWxzZTtcblxuXHQvLyBTYXZlIGNvbXB1dGVkIG9wdGlvbnNcblx0Y29tcHV0ZWRPcHRzID0gb3B0cztcblxuXHQvLyBMaXN0ZW4gdG8gd2luZG93LXNpemUgY2hhbmdlc1xuXHR3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgb25SZXNpemUpO1xuXG5cdC8vIFN0YXJ0IHRoZSBpbnRlcm5hbCBpbml0IGZ1bmN0aW9uXG5cdHJldHVybiBfaW5pdChjb21wdXRlZE9wdHMpO1xufTtcblxudmFyIF9pbml0ID0gZnVuY3Rpb24gX2luaXQob3B0cykge1xuXG5cdC8vIEdldCBzaXplIG9mIHdpbmRvd1xuXHRjb21wdXRlZFdpbmRvdyA9IGdldFdpbmRvd01ldHJpY3MoKTtcblxuXHQvLyBSZXNldCBjb21wdXRlZCBlbGVtZW50c1xuXHRjb21wdXRlZEVsZW1lbnRzID0gW107XG5cblx0Ly8gVXBkYXRlIHRoZSBtZXRyaWNzIG9mIGVhY2ggZWxlbWVudFxuXHRmb3IgKHZhciBpID0gMDsgaSA8IG9wdHMuZWxlbWVudHMubGVuZ3RoOyArK2kpIHtcblxuXHRcdHZhciBlbGVtZW50ID0gb3B0cy5lbGVtZW50c1tpXTtcblx0XHR2YXIgZWxlbWVudE1ldHJpY3MgPSBnZXRFbGVtZW50TWV0cmljcyhlbGVtZW50LCBjb21wdXRlZFdpbmRvdywgaSk7XG5cblx0XHQvLyBTYXZlIG1ldHJpY3Mgb2YgZWxlbWVudFxuXHRcdGNvbXB1dGVkRWxlbWVudHMucHVzaChlbGVtZW50TWV0cmljcyk7XG5cdH1cblxuXHR2YXIgaXNCaWcgPSBjb21wdXRlZFdpbmRvdy53aWR0aCA+PSBvcHRzLm1pbldpZHRoICYmIGNvbXB1dGVkV2luZG93LmhlaWdodCA+PSBvcHRzLm1pbkhlaWdodDtcblx0dmFyIGlzU21hbGwgPSBjb21wdXRlZFdpbmRvdy53aWR0aCA8IG9wdHMubWluV2lkdGggfHwgY29tcHV0ZWRXaW5kb3cuaGVpZ2h0IDwgb3B0cy5taW5IZWlnaHQ7XG5cblx0aWYgKGlzQmlnID09PSB0cnVlICYmIChvbiA9PT0gZmFsc2UgfHwgb24gPT09IG51bGwpKSByZXR1cm4gc3RhcnQob3B0cyk7ZWxzZSBpZiAoaXNTbWFsbCA9PT0gdHJ1ZSAmJiAob24gPT09IHRydWUgfHwgb24gPT09IG51bGwpKSByZXR1cm4gc3RvcChvcHRzKTtcbn07XG5cbnZhciBpc01vYmlsZSA9IGZ1bmN0aW9uIGlzTW9iaWxlKCkge1xuXG5cdHJldHVybiAoL0FuZHJvaWR8aVBob25lfGlQYWR8aVBvZHxCbGFja0JlcnJ5L2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50IHx8IG5hdmlnYXRvci52ZW5kb3IgfHwgd2luZG93Lm9wZXJhKVxuXHQpO1xufTtcblxudmFyIHRpbWluZyA9IGZ1bmN0aW9uIHRpbWluZyh0LCBiLCBjLCBkKSB7XG5cblx0Ly8gdCA9IEN1cnJlbnQgZnJhbWVcblx0Ly8gYiA9IFN0YXJ0LXZhbHVlXG5cdC8vIGMgPSBFbmQtdmFsdWVcblx0Ly8gZCA9IER1cmF0aW9uXG5cblx0dCAvPSBkO1xuXHRyZXR1cm4gLWMgKiB0ICogKHQgLSAyKSArIGI7XG59O1xuXG52YXIgbm9ybWFsaXplUG9zaXRpb24gPSBmdW5jdGlvbiBub3JtYWxpemVQb3NpdGlvbihuZXdQb3MsIG1heFBvcykge1xuXG5cdGlmIChuZXdQb3MgPCAwKSBuZXdQb3MgPSAwO1xuXHRpZiAobmV3UG9zID4gbWF4UG9zIC0gMSkgbmV3UG9zID0gbWF4UG9zIC0gMTtcblxuXHRyZXR1cm4gbmV3UG9zO1xufTtcblxudmFyIHZhbGlkID0gZnVuY3Rpb24gdmFsaWQoKSB7XG5cdHZhciBvcHRzID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcblxuXG5cdC8vIENoZWNrIHJlcXVpcmVkIHByb3BlcnRpZXNcblxuXHRpZiAob3B0cy5lbGVtZW50cyA9PSBudWxsKSB7XG5cdFx0Y29uc29sZS5lcnJvcignRWxlbWVudHMgbWlzc2luZzogb3B0cy5lbGVtZW50cycpO1xuXHRcdHJldHVybiBmYWxzZTtcblx0fVxuXG5cdGlmIChvcHRzLm1pbldpZHRoID09IG51bGwgfHwgb3B0cy5taW5XaWR0aCA8IDApIHtcblx0XHRjb25zb2xlLmVycm9yKCdQcm9wZXJ0eSBtaXNzaW5nIG9yIG5vdCBhIG51bWJlcjogb3B0cy5taW5XaWR0aCcpO1xuXHRcdHJldHVybiBmYWxzZTtcblx0fVxuXG5cdGlmIChvcHRzLm1pbkhlaWdodCA9PSBudWxsIHx8IG9wdHMubWluSGVpZ2h0IDwgMCkge1xuXHRcdGNvbnNvbGUuZXJyb3IoJ1Byb3BlcnR5IG1pc3Npbmcgb3Igbm90IGEgbnVtYmVyOiBvcHRzLm1pbkhlaWdodCcpO1xuXHRcdHJldHVybiBmYWxzZTtcblx0fVxuXG5cdC8vIFNldCBvcHRpb25hbCBwcm9wZXJ0aWVzXG5cblx0aWYgKG9wdHMuZGV0ZWN0TW9iaWxlICE9PSBmYWxzZSkgb3B0cy5kZXRlY3RNb2JpbGUgPSB0cnVlO1xuXHRpZiAob3B0cy5kdXJhdGlvbiA9PSBudWxsIHx8IG9wdHMuZHVyYXRpb24gPCAwKSBvcHRzLmR1cmF0aW9uID0gMjA7XG5cdGlmIChvcHRzLnRpbWluZyA9PSBudWxsKSBvcHRzLnRpbWluZyA9IHRpbWluZztcblx0aWYgKG9wdHMua2V5Ym9hcmQgIT09IGZhbHNlKSBvcHRzLmtleWJvYXJkID0gdHJ1ZTtcblxuXHRyZXR1cm4gdHJ1ZTtcbn07XG5cbnZhciBnZXRXaW5kb3dNZXRyaWNzID0gZnVuY3Rpb24gZ2V0V2luZG93TWV0cmljcygpIHtcblxuXHR2YXIgYm91bmRpbmdDbGllbnRSZWN0ID0gZG9jdW1lbnQuYm9keS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcblx0dmFyIHdpbmRvd1NpemUgPSB7IHdpZHRoOiB3aW5kb3cuaW5uZXJXaWR0aCwgaGVpZ2h0OiB3aW5kb3cuaW5uZXJIZWlnaHQgfTtcblxuXHRyZXR1cm4ge1xuXHRcdHRvcDogYm91bmRpbmdDbGllbnRSZWN0LnRvcCAqIC0xLFxuXHRcdG1heFRvcDogYm91bmRpbmdDbGllbnRSZWN0LmhlaWdodCAtIHdpbmRvd1NpemUuaGVpZ2h0LFxuXHRcdGJvdHRvbTogYm91bmRpbmdDbGllbnRSZWN0LnRvcCAqIC0xICsgd2luZG93U2l6ZS5oZWlnaHQsXG5cdFx0d2lkdGg6IHdpbmRvd1NpemUud2lkdGgsXG5cdFx0aGVpZ2h0OiB3aW5kb3dTaXplLmhlaWdodFxuXHR9O1xufTtcblxudmFyIGdldEVsZW1lbnRNZXRyaWNzID0gZnVuY3Rpb24gZ2V0RWxlbWVudE1ldHJpY3MoZWxlbSwgd2luZG93TWV0cmljcywgaW5kZXgpIHtcblxuXHRpZiAoZWxlbSA9PSBudWxsKSByZXR1cm4gZmFsc2U7XG5cblx0dmFyIG9iaiA9IHtcblx0XHRpbmRleDogaW5kZXgsXG5cdFx0YWN0aXZlOiBmYWxzZSxcblx0XHR0b3A6IGVsZW0ub2Zmc2V0VG9wLFxuXHRcdGJvdHRvbTogZWxlbS5vZmZzZXRUb3AgKyBlbGVtLm9mZnNldEhlaWdodCxcblx0XHRoZWlnaHQ6IGVsZW0ub2Zmc2V0SGVpZ2h0LFxuXHRcdGRvbTogZWxlbVxuXHR9O1xuXG5cdG9iai52aXNpYmxlUGVyY2VudGFnZSA9IGdldEVsZW1lbnRWaXNpYmxlUGVyY2VudGFnZShvYmosIHdpbmRvd01ldHJpY3MpLnZQO1xuXG5cdHJldHVybiBvYmo7XG59O1xuXG52YXIgZ2V0RWxlbWVudFZpc2libGVQZXJjZW50YWdlID0gZnVuY3Rpb24gZ2V0RWxlbWVudFZpc2libGVQZXJjZW50YWdlKGVsZW1lbnRNZXRyaWNzLCB3aW5kb3dNZXRyaWNzKSB7XG5cblx0dmFyIHNQID0gMDtcblx0dmFyIGVQID0gMDtcblx0dmFyIHZIID0gMDtcblx0dmFyIHZQID0gMDtcblxuXHQvLyBDYWxjdWxhdGUgc3RhcnQtcG9pbnQgKHNQKVxuXHRzUCA9IHdpbmRvd01ldHJpY3MudG9wID4gZWxlbWVudE1ldHJpY3MudG9wID8gd2luZG93TWV0cmljcy50b3AgOiBlbGVtZW50TWV0cmljcy50b3A7XG5cblx0Ly8gQ2FsY3VsYXRlIGVuZC1wb2ludCAoZVApXG5cdGVQID0gd2luZG93TWV0cmljcy5ib3R0b20gPiBlbGVtZW50TWV0cmljcy5ib3R0b20gPyBlbGVtZW50TWV0cmljcy5ib3R0b20gOiB3aW5kb3dNZXRyaWNzLmJvdHRvbTtcblxuXHQvLyBDYWxjdWxhdGUgdmlzaWJsZSBoZWlnaHQgaW4gcGl4ZWxzICh2SClcblx0dkggPSBlUCAtIHNQO1xuXG5cdC8vIENvbnZlcnQgdkggZnJvbSBwaXhlbHMgdG8gYSBwZXJjZW50YWdlIHZhbHVlXG5cdC8vIDEwMCA9IGVsZW1lbnQgY29tcGxldGVseSB2aXNpYmxlXG5cdC8vIDAgPSBlbGVtZW50IG5vdCB2aXNpYmxlIGF0IGFsbFxuXHR2UCA9IDEwMCAvIGVsZW1lbnRNZXRyaWNzLmhlaWdodCAqIHZIO1xuXG5cdC8vIE5vcm1hbGl6ZSBvdXRwdXRcblx0aWYgKHZIIDwgMCkgdkggPSAwO1xuXHRpZiAodlAgPCAwKSB2UCA9IDA7XG5cblx0Ly8gUmV0dXJuIHRoZSB2aXNpYmxlIGhlaWdodCBpbiBwZXJjZW50XG5cdHJldHVybiB7IHZIOiB2SCwgdlA6IHZQIH07XG59O1xuXG52YXIgc2V0RWxlbWVudFZpc2libGUgPSBmdW5jdGlvbiBzZXRFbGVtZW50VmlzaWJsZShlbGVtZW50TWV0cmljcywgd2luZG93TWV0cmljcykge1xuXG5cdHZhciBlbGVtID0gZWxlbWVudE1ldHJpY3MuZG9tO1xuXG5cdC8vIFJlbW92ZSBhbGwgYWN0aXZlLXN0YXRlc1xuXHRmb3IgKHZhciBpID0gMDsgaSA8IGNvbXB1dGVkRWxlbWVudHMubGVuZ3RoOyArK2kpIHtcblxuXHRcdHZhciBfZWxlbWVudE1ldHJpY3MgPSBjb21wdXRlZEVsZW1lbnRzW2ldO1xuXG5cdFx0X2VsZW1lbnRNZXRyaWNzLmRvbS5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcblx0XHRfZWxlbWVudE1ldHJpY3MuYWN0aXZlID0gZmFsc2U7XG5cdH1cblxuXHQvLyBBZGQgYWN0aXZlLXN0YXRlIHRvIHRoZSBlbGVtZW50XG5cdGVsZW0uY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XG5cdGVsZW1lbnRNZXRyaWNzLmFjdGl2ZSA9IHRydWU7XG5cblx0dmFyIGN1cnJlbnRGcmFtZSA9IDA7XG5cdHZhciBzdGFydFNjcm9sbFRvcCA9IC1kb2N1bWVudC5ib2R5LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcDtcblx0dmFyIGRpZmZlcmVuY2UgPSBzdGFydFNjcm9sbFRvcCAtIGVsZW1lbnRNZXRyaWNzLnRvcDtcblx0dmFyIGR1cmF0aW9uID0gY29tcHV0ZWRPcHRzLmR1cmF0aW9uO1xuXHR2YXIgdGltaW5nID0gY29tcHV0ZWRPcHRzLnRpbWluZztcblxuXHRmdW5jdGlvbiBhbmltYXRpb24oKSB7XG5cblx0XHR2YXIgbmV3U2Nyb2xsVG9wID0gc3RhcnRTY3JvbGxUb3AgLSB0aW1pbmcoY3VycmVudEZyYW1lLCAwLCBkaWZmZXJlbmNlLCBkdXJhdGlvbik7XG5cblx0XHQvLyBTY3JvbGwgdG8gZWxlbWVudFxuXHRcdGRvY3VtZW50LmJvZHkuc2Nyb2xsVG9wID0gbmV3U2Nyb2xsVG9wOyAvLyBTYWZhcmksIENocm9tZVxuXHRcdGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3AgPSBuZXdTY3JvbGxUb3A7IC8vIEZpcmVmb3hcblxuXHRcdC8vIFN0b3AgdGhlIGFuaW1hdGlvbiB3aGVuIC4uLlxuXHRcdC8vIC4uLiBhbGwgZnJhbWVzIGhhdmUgYmVlbiBzaG93blxuXHRcdC8vIC4uLiBzY3JvbGxUb3AgcmVhY2hlZCBpdHMgbWF4aW11bSBhZnRlciB0aGUgZmlyc3QgZnJhbWVcblx0XHRpZiAoY3VycmVudEZyYW1lID49IGR1cmF0aW9uIHx8IGRvY3VtZW50LmJvZHkuc2Nyb2xsVG9wID09PSB3aW5kb3dNZXRyaWNzLm1heFRvcCAmJiBjdXJyZW50RnJhbWUgIT09IDApIHtcblxuXHRcdFx0Ly8gQW5pbWF0aW9uIGZpbmlzaGVkXG5cdFx0XHRhbmltYXRpbmcgPSBmYWxzZTtcblx0XHR9IGVsc2Uge1xuXG5cdFx0XHQvLyBDb250aW51ZSB3aXRoIG5leHQgZnJhbWVcblx0XHRcdGN1cnJlbnRGcmFtZSsrO1xuXG5cdFx0XHQvLyBDb250aW51ZSBhbmltYXRpb25cblx0XHRcdHJlcXVlc3RBbmltYXRpb25GcmFtZShhbmltYXRpb24pO1xuXHRcdH1cblx0fVxuXG5cdC8vIFN0YXJ0IHRoZSBhbmltYXRpb25cblx0YW5pbWF0aW9uKCk7XG5cblx0cmV0dXJuIHRydWU7XG59O1xuXG52YXIgc3RhcnQgPSBmdW5jdGlvbiBzdGFydChvcHRzKSB7XG5cblx0b24gPSB0cnVlO1xuXG5cdHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCd3aGVlbCcsIG9uU2Nyb2xsKTtcblx0aWYgKG9wdHMua2V5Ym9hcmQgPT09IHRydWUpIGRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIG9uS2V5ZG93bik7XG5cblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBjb21wdXRlZEVsZW1lbnRzLmxlbmd0aDsgKytpKSB7XG5cdFx0Y29tcHV0ZWRFbGVtZW50c1tpXS5kb20uY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XG5cdH1cblxuXHRyZXR1cm4gc2Nyb2xsVG9OZWFyZXN0KCk7XG59O1xuXG52YXIgc3RvcCA9IGZ1bmN0aW9uIHN0b3Aob3B0cykge1xuXG5cdG9uID0gZmFsc2U7XG5cblx0d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3doZWVsJywgb25TY3JvbGwpO1xuXHRpZiAob3B0cy5rZXlib2FyZCA9PT0gdHJ1ZSkgZG9jdW1lbnQuYm9keS5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgb25LZXlkb3duKTtcblxuXHRmb3IgKHZhciBpID0gMDsgaSA8IGNvbXB1dGVkRWxlbWVudHMubGVuZ3RoOyArK2kpIHtcblx0XHRjb21wdXRlZEVsZW1lbnRzW2ldLmRvbS5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcblx0fVxuXG5cdHJldHVybiB0cnVlO1xufTtcblxudmFyIG9uS2V5ZG93biA9IGZ1bmN0aW9uIG9uS2V5ZG93bihlKSB7XG5cblx0dmFyIGtleSA9IGUua2V5Q29kZTtcblx0dmFyIG5ld1BvcyA9IDA7XG5cblx0aWYgKGtleSAhPT0gMzggJiYga2V5ICE9PSA0MCkgcmV0dXJuIHRydWU7XG5cdGlmIChhbmltYXRpbmcgPT09IHRydWUpIHJldHVybiBmYWxzZTtcblxuXHRhbmltYXRpbmcgPSB0cnVlO1xuXG5cdC8vIEdldCBjdXJyZW50IHBvc2l0aW9uXG5cdGZvciAodmFyIGkgPSAwOyBpIDwgY29tcHV0ZWRFbGVtZW50cy5sZW5ndGg7ICsraSkge1xuXHRcdGlmIChjb21wdXRlZEVsZW1lbnRzW2ldLmFjdGl2ZSA9PT0gdHJ1ZSkgbmV3UG9zID0gaTtcblx0fVxuXG5cdC8vIDM4ID0gVXBcblx0Ly8gNDAgPSBEb3duXG5cdGlmIChrZXkgPT09IDM4KSBuZXdQb3MgKz0gLTE7ZWxzZSBpZiAoa2V5ID09PSA0MCkgbmV3UG9zICs9IDE7XG5cblx0Ly8gQ2hlY2sgaWYgbmV4dCBlbGVtZW50IGV4aXN0c1xuXHRuZXdQb3MgPSBub3JtYWxpemVQb3NpdGlvbihuZXdQb3MsIGNvbXB1dGVkRWxlbWVudHMubGVuZ3RoKTtcblxuXHQvLyBTaG93IHRoZSBuZXcgZWxlbWVudFxuXHRzZXRFbGVtZW50VmlzaWJsZShjb21wdXRlZEVsZW1lbnRzW25ld1Bvc10sIGNvbXB1dGVkV2luZG93KTtcblxuXHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdHJldHVybiBmYWxzZTtcbn07XG5cbnZhciBvblJlc2l6ZSA9IGZ1bmN0aW9uIG9uUmVzaXplKCkge1xuXG5cdC8vIFJlc2V0IHRpbWVvdXRcblx0Y2xlYXJUaW1lb3V0KHJlc2l6ZVRpbWVyKTtcblxuXHQvLyBTZXQgbmV3IHRpbWVvdXRcblx0cmVzaXplVGltZXIgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcblx0XHRyZXR1cm4gaW5pdChjb21wdXRlZE9wdHMpO1xuXHR9LCAyMDApO1xuXG5cdHJldHVybiB0cnVlO1xufTtcblxudmFyIG9uU2Nyb2xsID0gZnVuY3Rpb24gb25TY3JvbGwoZSkge1xuXG5cdGlmIChhbmltYXRpbmcgPT09IHRydWUpIHJldHVybiBmYWxzZTtcblxuXHQvLyBSZXNldCB0aW1lb3V0XG5cdGNsZWFyVGltZW91dChzY3JvbGxUaW1lcik7XG5cblx0Ly8gU2V0IG5ldyB0aW1lb3V0XG5cdHNjcm9sbFRpbWVyID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG5cdFx0cmV0dXJuIHNjcm9sbFRvKGUpO1xuXHR9LCAyMDApO1xuXG5cdHJldHVybiB0cnVlO1xufTtcblxudmFyIHNjcm9sbFRvID0gZnVuY3Rpb24gc2Nyb2xsVG8oZSkge1xuXG5cdGFuaW1hdGluZyA9IHRydWU7XG5cblx0dmFyIGRpcmVjdGlvbiA9IDA7XG5cdHZhciB0b3BFbGVtZW50ID0ge307XG5cdHZhciBuZXh0RWxlbWVudE51bSA9IG51bGw7XG5cdHZhciBuZXh0RWxlbWVudCA9IHt9O1xuXHR2YXIgZ3Jhdml0YXRpb24gPSA5LjgwNztcblxuXHQvLyBHZXQgdGhlIGRpcmVjdGlvbiBmcm9tIHRoZSBldmVudFxuXHRpZiAoZS50eXBlID09PSAnd2hlZWwnKSBkaXJlY3Rpb24gPSBlLmRlbHRhWTtcblxuXHQvLyBOb3JtYWxpemUgZGlyZWN0aW9uXG5cdGlmIChkaXJlY3Rpb24gPiAwKSBkaXJlY3Rpb24gPSAxO2Vsc2UgZGlyZWN0aW9uID0gLTE7XG5cblx0Ly8gVXBkYXRlIHdpbmRvdyBtZXRyaWNzXG5cdGNvbXB1dGVkV2luZG93ID0gZ2V0V2luZG93TWV0cmljcygpO1xuXG5cdC8vIFJlc2V0IGNvbXB1dGVkIGVsZW1lbnRzXG5cdGNvbXB1dGVkRWxlbWVudHMgPSBbXTtcblxuXHQvLyBVcGRhdGUgdGhlIG1ldHJpY3Mgb2YgZWFjaCBlbGVtZW50XG5cdGZvciAodmFyIGkgPSAwOyBpIDwgY29tcHV0ZWRPcHRzLmVsZW1lbnRzLmxlbmd0aDsgKytpKSB7XG5cblx0XHR2YXIgZWxlbWVudCA9IGNvbXB1dGVkT3B0cy5lbGVtZW50c1tpXTtcblx0XHR2YXIgZWxlbWVudE1ldHJpY3MgPSBnZXRFbGVtZW50TWV0cmljcyhlbGVtZW50LCBjb21wdXRlZFdpbmRvdywgaSk7XG5cblx0XHQvLyBTYXZlIG1ldHJpY3Mgb2YgZWxlbWVudFxuXHRcdGNvbXB1dGVkRWxlbWVudHMucHVzaChlbGVtZW50TWV0cmljcyk7XG5cblx0XHQvLyBHZXQgdGhlIGVsZW1lbnQgd2hpY2ggaXMgbW9zdCB2aXNpYmxlIGFuZCBzYXZlIGl0XG5cdFx0aWYgKHRvcEVsZW1lbnQudmlzaWJsZVBlcmNlbnRhZ2UgPT0gbnVsbCB8fCBlbGVtZW50TWV0cmljcy52aXNpYmxlUGVyY2VudGFnZSA+IHRvcEVsZW1lbnQudmlzaWJsZVBlcmNlbnRhZ2UpIHRvcEVsZW1lbnQgPSBlbGVtZW50TWV0cmljcztcblx0fVxuXG5cdC8vIFVzZSB0aGUgdmVsb2NpdHkgdG8gY2FsY3VsYXRlIHRoZSBuZXh0IGVsZW1lbnRcblx0bmV4dEVsZW1lbnROdW0gPSB0b3BFbGVtZW50LmluZGV4ICsgZGlyZWN0aW9uO1xuXG5cdC8vIENoZWNrIGlmIG5leHQgZWxlbWVudCBleGlzdHNcblx0bmV4dEVsZW1lbnROdW0gPSBub3JtYWxpemVQb3NpdGlvbihuZXh0RWxlbWVudE51bSwgY29tcHV0ZWRFbGVtZW50cy5sZW5ndGgpO1xuXG5cdC8vIEFkZCB2ZWxvY2l0eSB0byBuZXh0IGVsZW1lbnRcblx0Y29tcHV0ZWRFbGVtZW50c1tuZXh0RWxlbWVudE51bV0udmlzaWJsZVBlcmNlbnRhZ2UgKj0gZ3Jhdml0YXRpb247XG5cblx0Ly8gUmUtY2hlY2sgaWYgdGhlcmUgaXMgYSBuZXcgbW9zdCB2aXNpYmxlIGVsZW1lbnRcblx0Zm9yICh2YXIgX2kgPSAwOyBfaSA8IGNvbXB1dGVkRWxlbWVudHMubGVuZ3RoOyArK19pKSB7XG5cblx0XHR2YXIgX2VsZW1lbnRNZXRyaWNzMiA9IGNvbXB1dGVkRWxlbWVudHNbX2ldO1xuXG5cdFx0aWYgKF9lbGVtZW50TWV0cmljczIudmlzaWJsZVBlcmNlbnRhZ2UgPiB0b3BFbGVtZW50LnZpc2libGVQZXJjZW50YWdlKSB0b3BFbGVtZW50ID0gX2VsZW1lbnRNZXRyaWNzMjtcblx0fVxuXG5cdHJldHVybiBzZXRFbGVtZW50VmlzaWJsZSh0b3BFbGVtZW50LCBjb21wdXRlZFdpbmRvdyk7XG59O1xuXG52YXIgc2Nyb2xsVG9OZWFyZXN0ID0gZnVuY3Rpb24gc2Nyb2xsVG9OZWFyZXN0KCkge1xuXG5cdGFuaW1hdGluZyA9IHRydWU7XG5cblx0dmFyIG5leHRFbGVtZW50TWV0cmljcyA9IG51bGw7XG5cblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBjb21wdXRlZE9wdHMuZWxlbWVudHMubGVuZ3RoOyArK2kpIHtcblxuXHRcdHZhciBlbGVtZW50TWV0cmljcyA9IGNvbXB1dGVkRWxlbWVudHNbaV07XG5cblx0XHRpZiAoY29tcHV0ZWRXaW5kb3cudG9wID49IGVsZW1lbnRNZXRyaWNzLnRvcCkgbmV4dEVsZW1lbnRNZXRyaWNzID0gZWxlbWVudE1ldHJpY3M7XG5cdH1cblxuXHRyZXR1cm4gc2V0RWxlbWVudFZpc2libGUobmV4dEVsZW1lbnRNZXRyaWNzLCBjb21wdXRlZFdpbmRvdyk7XG59O1xuXG4vKioqLyB9KVxuLyoqKioqKi8gXSk7Il19

/*!
 * Krig.io
 * Krig.io webpage, using the fastshell boilerplate.
 * https://krig.io
 * @author Krig.io
 * @version 0.0.1
 * Copyright 2018. UNLICENSED licensed.
 */
@import url("https://fonts.googleapis.com/css?family=Chivo|Overpass+Mono");.clear:after,.clear:before{content:" ";display:table}.clear{*zoom:1}.clear:after{clear:both}*{font-smoothing:antialiased;text-rendering:optimizeLegibility}body,html{width:100%;height:100%}html{font-size:100%;background:#fff}body{font:300 16px/1.6 Helvetica Neue,Helvetica,Arial;color:#000;transition:all .4s ease-in .3s}a{cursor:url(../img/cursor.png) 0 0,auto;cursor:-webkit-image-set(url("../img/cursor.png") 1x,url("../img/cursor.png") 2x),auto}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.logo-small{width:150px;height:auto;position:absolute;margin-left:20px;margin-top:20px}@media only screen and (min-width:768px){.logo-small{width:250px;margin-left:40px;margin-top:40px}}.sticky--top{position:fixed;top:auto;width:100%;text-align:center;top:30px;left:20px}.sticky--left{left:-86px;right:auto;transform:rotate(90deg) translateY(-50%);position:fixed;top:50%}@media only screen and (max-width:480px){.sticky--left{left:-110px}}.sticky--right{display:block;position:absolute;top:50%;left:-93px;transform:rotate(-90deg) translateY(-50%);color:#fff}.sticky--right a{font-family:Chivo,sans-serif;font-size:.75rem;font-weight:700;font-style:italic;letter-spacing:3px;color:#000;text-decoration:none}.sticky--bottom{position:fixed;bottom:30px;width:100%;left:40px}.sticky--bottom a{font-family:Chivo,sans-serif;font-size:.75rem;font-weight:700;font-style:italic;text-decoration:none;color:#000;display:inline-block}.sticky--bottom .saker-text{font-family:nexa_boldregular,sans-serif;margin-left:20px;font-style:normal;font-size:.75rem}.sticky--bottom .saker-text:hover .saker-icon{fill:#fc276c}.sticky--bottom .saker-icon{width:20px;transform:translateY(3px);display:inline-block;margin-left:3px;fill:#000;float:none}.sticky--bottom .saker-icon path{fill-opacity:1}.nav ul{list-style:none}.work-panel{right:0;background-color:#000;min-height:100%;width:50%;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.pitch-form{max-width:100%;padding:0 10%}.pitch-text{color:#fff;text-align:left}.pitch-form-text{border:1px #fff;background:transparent;color:#fff;border-style:solid;border-radius:4px;width:100%;padding:10px 10px 50px;margin-bottom:25px;font-size:.875rem;color:#0f0}.pitch-form-text::-webkit-input-placeholder{color:#0f0}.pitch-form-text:-ms-input-placeholder{color:#0f0}.pitch-form-text::placeholder{color:#0f0}.pitch-form-text:focus{outline:none;border-color:#0f0}.pitch-button-send{border-style:none;width:35%;height:46px;border:none;background:#fff;border-radius:100px;margin:0 auto;display:block;margin-top:10px;font-size:.75rem}.pitch-button-send:hover{cursor:pointer}.pitch-button-send:focus{border:none;outline:none}@media only screen and (max-width:480px){.pitch-button-send{width:90%}}@media only screen and (max-width:768px){.pitch-button-send{width:80%}}.work-panel{width:50vw;height:100vh;top:0;position:fixed;z-index:1000;right:-43vw;overflow:hidden;background-color:#111;transition:all .4s ease-in-out}.work-panel.open{right:0}.work-panel.open .arrow{transform:rotate(-180deg)}.work-panel__bar{height:100%;width:17vw;position:relative;text-align:center;background-color:#000;cursor:url(../img/cursor.png),auto;cursor:-webkit-image-set(url("../img/cursor.png") 1x,url("../img/cursor.png") 2x),auto}.sticky--right span{transform:rotate(0deg);display:block;min-width:300px;text-align:center;top:50%}.arrow{color:#fff;width:30px;margin-top:30px;transition:all .5s ease}body,html{min-height:1vh;min-height:100%;padding:0;margin:0;border:none;background:#fff;font-size:16px;line-height:1.5}.main{height:100%;width:100%}.intro{width:60%;margin-left:77px;margin-top:120px;width:40%}@media only screen and (min-width:768px){.intro{width:60%;margin-left:120px;margin-top:120px}}.about{width:60%;margin-left:77px;margin-top:120px;width:40%}@media only screen and (min-width:768px){.about{width:60%;margin-left:120px;margin-top:120px}}.buddies-container{max-width:100%}.buddy{width:50px;margin-right:20px}path{fill-opacity:.5;transition:all .5s}path:nth-child(n+32){opacity:0}svg:hover path:nth-child(n+10){opacity:1}p{font-family:Courier New}svg{display:block;float:left;margin:0}*,canvas{box-sizing:border-box}canvas{background-color:#fff;position:fixed;z-index:-1;right:0;top:0;height:100%;width:100%;opacity:.7}.facebook-icon,.github-icon,.instagram-icon{width:20px}.facebook-icon,.github-icon,.instagram-icon,.twitter-icon{opacity:.8;margin-left:10px;margin-right:10px;transform:rotate(-90deg)}.twitter-icon{height:20px}.mail-icon{width:20px;opacity:.8;margin-left:10px;margin-right:10px;transform:rotate(-90deg)}body,p{font-family:Overpass Mono,monospace}h1,h2,h3{font-family:nexa_boldregular,sans-serif}h1.saker-text,h2.saker-text,h3.saker-text{margin-bottom:20px;line-height:115%;font-size:1.75rem}@media only screen and (max-width:480px){h1,h2,h3{font-size:1.5rem}}h4{font-family:Chivo,sans-serif}h4.headline{margin-bottom:20px;line-height:115%;font-size:1.75rem}@media only screen and (max-width:480px){h4{font-size:1.5rem}}p{font-size:1rem;line-height:2}p.under-text{margin-bottom:30px}@media only screen and (max-width:480px){p{font-size:.65rem}}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZXMvX3R5cG9ncmFwaHkuc2NzcyIsIm1vZHVsZXMvX2NsZWFyZml4LnNjc3MiLCJzdHlsZS5jc3MiLCJtb2R1bGVzL19kZWZhdWx0cy5zY3NzIiwibW9kdWxlcy9fdmFycy5zY3NzIiwibW9kdWxlcy9fbm9ybWFsaXplLnNjc3MiLCJwYXJ0aWFscy9faGVhZGVyLnNjc3MiLCJwYXJ0aWFscy9fbmF2LnNjc3MiLCJwYXJ0aWFscy9fc2lkZWJhci5zY3NzIiwicGFydGlhbHMvX21haW4uc2NzcyIsIm1vZHVsZXMvX2J1dHRvbnMuc2NzcyIsIm1vZHVsZXMvX21pc2Muc2NzcyIsIm1vZHVsZXMvX3ByaW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSwyRUFBWSxBQ0FaLDJCQUNFLFlBQVksQUFDWixhQUFjLENBQ2YsQUFDRCxRQ0VFLE1ERFEsQ0FEVixBQVNDLGFBRkcsVUFBVyxDQUNaLEFFWkgsRUFFRSwyQkFBMkIsQUFDM0IsaUNBQWtDLENBQ25DLEFBQ0QsVUFFSSxXQUFXLEFBQ1gsV0FBWSxDQUVmLEFBRUQsS0FDRSxlQUFlLEFBQ2YsZUNkaUIsQ0RlbEIsQUFDRCxLQUNFLGlEQUFxRCxBQUNyRCxXQUNBLEFDbEJnQiw4QkRrQmUsQ0FDaEMsQUFFRCxFQUNFLHVDQUEwQyxBQUMxQyxzRkFHSyxDQUNOOztBRTVCRCw0RUFBNEUsQUFPNUUsS0FDRSx1QkFBdUIsQUFDdkIsMEJBQTBCLEFBQzFCLDZCQUE4QixDQUMvQixBQU1ELEtBQ0UsUUFBUyxDQUNWLEFBV0Qsb0ZBWUUsYUFBYyxDQUNmLEFBTUQsNEJBSUUsb0JBQXFCLENBQ3RCLEFBTUQsc0JBQ0UsYUFBYSxBQUNiLFFBQVMsQ0FDVixBQU1ELFNBQ0UsdUJBQXdCLENBQ3pCLEFBT0Qsa0JBRUUsWUFBYSxDQUNkLEFBVUQsRUFDRSw2QkFBNkIsQUFDN0Isb0NBQXFDLENBQ3RDLEFBT0QsaUJBRUUsZUFBZ0IsQ0FDakIsQUFVRCxZQUNFLG1CQUFtQixBQUNuQiww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J2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1DaGl2b3xPdmVycGFzcytNb25vJyk7XG5cbmJvZHksXG5wIHtcbiAgZm9udC1mYW1pbHk6ICRmb250LWJvZHk7XG59XG5cbmgxLFxuaDIsXG5oMyB7XG4gIGZvbnQtZmFtaWx5OiAkZm9udC1zYWtlcjtcblxuICAmLnNha2VyLXRleHQge1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgbGluZS1oZWlnaHQ6IDExNSU7XG4gICAgZm9udC1zaXplOiAxLjc1cmVtO1xuICB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDo0ODBweCkge1xuICAgIGZvbnQtc2l6ZTogMS41cmVtO1xuICB9XG5cbn1cblxuaDQge1xuICBmb250LWZhbWlseTogJGZvbnQtaGVhZGxpbmU7XG5cbiAgJi5oZWFkbGluZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICBsaW5lLWhlaWdodDogMTE1JTtcbiAgICBmb250LXNpemU6IDEuNzVyZW07XG4gIH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjQ4MHB4KSB7XG4gICAgZm9udC1zaXplOiAxLjVyZW07XG4gIH1cblxufVxuXG5wIHtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBsaW5lLWhlaWdodDogMjtcblxuICAmLnVuZGVyLXRleHQge1xuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XG5cbiAgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6NDgwcHgpIHtcbiAgICBmb250LXNpemU6IDAuNjVyZW07XG4gIH1cbn1cbiIsIiVjbGVhciB7XG4gIGNvbnRlbnQ6ICcgJztcbiAgZGlzcGxheTogdGFibGU7XG59XG4uY2xlYXIge1xuICAqem9vbTogMTtcbiAgJjpiZWZvcmUge1xuICAgIEBleHRlbmQgJWNsZWFyO1xuICB9XG4gICY6YWZ0ZXIge1xuICAgIEBleHRlbmQgJWNsZWFyO1xuICAgIGNsZWFyOiBib3RoO1xuICB9XG59XG4iLCJAaW1wb3J0IHVybChcImh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1DaGl2b3xPdmVycGFzcytNb25vXCIpO1xuLmNsZWFyOmJlZm9yZSwgLmNsZWFyOmFmdGVyIHtcbiAgY29udGVudDogJyAnO1xuICBkaXNwbGF5OiB0YWJsZTsgfVxuXG4uY2xlYXIge1xuICAqem9vbTogMTsgfVxuICAuY2xlYXI6YWZ0ZXIge1xuICAgIGNsZWFyOiBib3RoOyB9XG5cbioge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBmb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7IH1cblxuaHRtbCxcbmJvZHkge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBtaW4taGVpZ2h0OiAxMDAlOyB9XG5cbmh0bWwge1xuICBmb250LXNpemU6IDEwMCU7XG4gIGJhY2tncm91bmQ6ICNmZmZmZmY7IH1cblxuYm9keSB7XG4gIGZvbnQ6IDMwMCAxNnB4LzEuNiAnSGVsdmV0aWNhIE5ldWUnLCBIZWx2ZXRpY2EsIEFyaWFsO1xuICBjb2xvcjogIzAwMDtcbiAgdHJhbnNpdGlvbjogYWxsIC40cyAuM3MgZWFzZS1pbjsgfVxuXG5hIHtcbiAgY3Vyc29yOiB1cmwoXCIuLi9pbWcvY3Vyc29yLnBuZ1wiKSAwIDAsIGF1dG87XG4gIGN1cnNvcjogLXdlYmtpdC1pbWFnZS1zZXQodXJsKFwiLi4vaW1nL2N1cnNvci5wbmdcIikgMXgsIHVybChcIi4uL2ltZy9jdXJzb3IucG5nXCIpIDJ4KSwgYXV0bzsgfVxuXG4vKiEgbm9ybWFsaXplLmNzcyB2NC4xLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZGVmYXVsdCBmb250IGZhbWlseSBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gSUUgYW5kIGlPUy5cbiAqL1xuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICAvKiAxICovXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7IH1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSwgYW5kIEZpcmVmb3guXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5tYWluLFxubWVudSxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHtcbiAgLyogMSAqL1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5hdWRpbyxcbmNhbnZhcyxcbnByb2dyZXNzLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBpT1MgNC03LlxuICovXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG50ZW1wbGF0ZSxcbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIGdhcHMgaW4gbGlua3MgdW5kZXJsaW5lIGluIGlPUyA4KyBhbmQgU2FmYXJpIDgrLlxuICovXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0cztcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBvdXRsaW5lIG9uIGZvY3VzZWQgbGlua3Mgd2hlbiB0aGV5IGFyZSBhbHNvIGFjdGl2ZSBvciBob3ZlcmVkXG4gKiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZS13aWR0aDogMDsgfVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIEZpcmVmb3ggMzktLlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lO1xuICAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUHJldmVudCB0aGUgZHVwbGljYXRlIGFwcGxpY2F0aW9uIG9mIGBib2xkZXJgIGJ5IHRoZSBuZXh0IHJ1bGUgaW4gU2FmYXJpIDYuXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogaW5oZXJpdDsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc3R5bGUgaW4gQW5kcm9pZCA0LjMtLlxuICovXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7IH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGJhY2tncm91bmQgYW5kIGNvbG9yIGluIElFIDktLlxuICovXG5tYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgY29sb3I6ICMwMDA7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuc21hbGwge1xuICBmb250LXNpemU6IDgwJTsgfVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTsgfVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLS5cbiAqL1xuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lOyB9XG5cbi8qKlxuICogSGlkZSB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKi9cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IG1hcmdpbiBpbiBJRSA4LlxuICovXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4OyB9XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAvKiAxICovXG4gIGhlaWdodDogMDtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgLyogMiAqLyB9XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDEgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb250IHdlaWdodCB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDsgfVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQge1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXG4gKiAxLiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2BcbiAqICAgIGNvbnRyb2xzIGluIEFuZHJvaWQgNC5cbiAqIDIuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcbmh0bWwgW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0OyB9XG5cbi8qKlxuICogQ2hhbmdlIHRoZSBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlO1xuICAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIC8qIDEgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gKi9cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxuICovXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgdGV4dCBzdHlsZSBvZiBwbGFjZWhvbGRlcnMgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG46Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgb3BhY2l0eTogMC41NDsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMSAqL1xuICBmb250OiBpbmhlcml0O1xuICAvKiAyICovIH1cblxuLmxvZ28tc21hbGwge1xuICB3aWR0aDogMTUwcHg7XG4gIGhlaWdodDogYXV0bztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICBtYXJnaW4tdG9wOiAyMHB4OyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAubG9nby1zbWFsbCB7XG4gICAgICB3aWR0aDogMjUwcHg7XG4gICAgICBtYXJnaW4tbGVmdDogNDBweDtcbiAgICAgIG1hcmdpbi10b3A6IDQwcHg7IH0gfVxuXG4uc3RpY2t5LS10b3Age1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogYXV0bztcbiAgd2lkdGg6IDEwMCU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdG9wOiAzMHB4O1xuICBsZWZ0OiAyMHB4OyB9XG5cbi5zdGlja3ktLWxlZnQge1xuICBsZWZ0OiAtODZweDtcbiAgcmlnaHQ6IGF1dG87XG4gIHRyYW5zZm9ybTogcm90YXRlKDkwZGVnKSB0cmFuc2xhdGVZKC01MCUpO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogNTAlOyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAuc3RpY2t5LS1sZWZ0IHtcbiAgICAgIGxlZnQ6IC0xMTBweDsgfSB9XG5cbi5zdGlja3ktLXJpZ2h0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IC05M3B4O1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpIHRyYW5zbGF0ZVkoLTUwJSk7XG4gIGNvbG9yOiAjZmZmOyB9XG4gIC5zdGlja3ktLXJpZ2h0IGEge1xuICAgIGZvbnQtZmFtaWx5OiBcIkNoaXZvXCIsIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiAwLjc1cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgICBsZXR0ZXItc3BhY2luZzogM3B4O1xuICAgIGNvbG9yOiAjMDAwO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG4uc3RpY2t5LS1ib3R0b20ge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGJvdHRvbTogMzBweDtcbiAgd2lkdGg6IDEwMCU7XG4gIGxlZnQ6IDQwcHg7IH1cbiAgLnN0aWNreS0tYm90dG9tIGEge1xuICAgIGZvbnQtZmFtaWx5OiBcIkNoaXZvXCIsIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiAwLjc1cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgY29sb3I6ICMwMDA7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG4gIC5zdGlja3ktLWJvdHRvbSAuc2FrZXItdGV4dCB7XG4gICAgZm9udC1mYW1pbHk6IFwibmV4YV9ib2xkcmVndWxhclwiLCBzYW5zLXNlcmlmO1xuICAgIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXNpemU6IDAuNzVyZW07IH1cbiAgICAuc3RpY2t5LS1ib3R0b20gLnNha2VyLXRleHQ6aG92ZXIgLnNha2VyLWljb24ge1xuICAgICAgZmlsbDogI2ZjMjc2YzsgfVxuICAuc3RpY2t5LS1ib3R0b20gLnNha2VyLWljb24ge1xuICAgIHdpZHRoOiAyMHB4O1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgzcHgpO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBtYXJnaW4tbGVmdDogM3B4O1xuICAgIGZpbGw6ICMwMDA7XG4gICAgZmxvYXQ6IG5vbmU7IH1cbiAgICAuc3RpY2t5LS1ib3R0b20gLnNha2VyLWljb24gcGF0aCB7XG4gICAgICBmaWxsLW9wYWNpdHk6IDE7IH1cblxuLm5hdiB1bCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7IH1cblxuLndvcmstcGFuZWwge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHJpZ2h0OiAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xuICBtaW4taGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogNTAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG5cbi5waXRjaC1mb3JtIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAwIDEwJTsgfVxuXG4ucGl0Y2gtdGV4dCB7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG5cbi5waXRjaC1mb3JtLXRleHQge1xuICBib3JkZXI6IDFweCAjZmZmO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgY29sb3I6ICNmZmY7XG4gIGJvcmRlci1zdHlsZTogc29saWQ7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDEwcHggMTBweCA1MHB4O1xuICBtYXJnaW4tYm90dG9tOiAyNXB4O1xuICBmb250LXNpemU6IDAuODc1cmVtO1xuICBjb2xvcjogIzAwZmYwMDsgfVxuICAucGl0Y2gtZm9ybS10ZXh0OjpwbGFjZWhvbGRlciB7XG4gICAgY29sb3I6ICMwMGZmMDA7IH1cbiAgLnBpdGNoLWZvcm0tdGV4dDpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICBib3JkZXItY29sb3I6ICMwMGZmMDA7IH1cblxuLnBpdGNoLWJ1dHRvbi1zZW5kIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICB3aWR0aDogMzUlO1xuICBoZWlnaHQ6IDQ2cHg7XG4gIGJvcmRlcjogbm9uZTtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgYm9yZGVyLXJhZGl1czogMTAwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLXRvcDogMTBweDtcbiAgZm9udC1zaXplOiAwLjc1cmVtOyB9XG4gIC5waXRjaC1idXR0b24tc2VuZDpob3ZlciB7XG4gICAgY3Vyc29yOiBwb2ludGVyOyB9XG4gIC5waXRjaC1idXR0b24tc2VuZDpmb2N1cyB7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIG91dGxpbmU6IG5vbmU7IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIC5waXRjaC1idXR0b24tc2VuZCB7XG4gICAgICB3aWR0aDogOTAlOyB9IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5waXRjaC1idXR0b24tc2VuZCB7XG4gICAgICB3aWR0aDogODAlOyB9IH1cblxuLndvcmstcGFuZWwge1xuICB3aWR0aDogNTB2dztcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgdG9wOiAwO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHotaW5kZXg6IDEwMDA7XG4gIHJpZ2h0OiAtNDN2dztcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzExMTtcbiAgdHJhbnNpdGlvbjogYWxsIC40cyBlYXNlLWluLW91dDsgfVxuICAud29yay1wYW5lbC5vcGVuIHtcbiAgICByaWdodDogMDsgfVxuICAgIC53b3JrLXBhbmVsLm9wZW4gLmFycm93IHtcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKC0xODBkZWcpOyB9XG5cbi53b3JrLXBhbmVsX19iYXIge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxN3Z3O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG4gIGN1cnNvcjogdXJsKFwiLi4vaW1nL2N1cnNvci5wbmdcIiksIGF1dG87XG4gIGN1cnNvcjogLXdlYmtpdC1pbWFnZS1zZXQodXJsKFwiLi4vaW1nL2N1cnNvci5wbmdcIikgMXgsIHVybChcIi4uL2ltZy9jdXJzb3IucG5nXCIpIDJ4KSwgYXV0bzsgfVxuXG4uc3RpY2t5LS1yaWdodCBzcGFuIHtcbiAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtaW4td2lkdGg6IDMwMHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRvcDogNTAlOyB9XG5cbi5hcnJvdyB7XG4gIGNvbG9yOiAjZmZmO1xuICB3aWR0aDogMzBweDtcbiAgbWFyZ2luLXRvcDogMzBweDtcbiAgdHJhbnNpdGlvbjogYWxsIDUwMG1zIGVhc2U7IH1cblxuaHRtbCxcbmJvZHkge1xuICBtaW4taGVpZ2h0OiAxdmg7XG4gIG1pbi1oZWlnaHQ6IDEwMCU7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7IH1cblxuLm1haW4ge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlOyB9XG5cbi5pbnRybyB7XG4gIHdpZHRoOiA2MCU7XG4gIG1hcmdpbi1sZWZ0OiA3N3B4O1xuICBtYXJnaW4tdG9wOiAxMjBweDtcbiAgd2lkdGg6IDQwJTsgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgLmludHJvIHtcbiAgICAgIHdpZHRoOiA2MCU7XG4gICAgICBtYXJnaW4tbGVmdDogMTIwcHg7XG4gICAgICBtYXJnaW4tdG9wOiAxMjBweDsgfSB9XG5cbi5hYm91dCB7XG4gIHdpZHRoOiA2MCU7XG4gIG1hcmdpbi1sZWZ0OiA3N3B4O1xuICBtYXJnaW4tdG9wOiAxMjBweDtcbiAgd2lkdGg6IDQwJTsgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgLmFib3V0IHtcbiAgICAgIHdpZHRoOiA2MCU7XG4gICAgICBtYXJnaW4tbGVmdDogMTIwcHg7XG4gICAgICBtYXJnaW4tdG9wOiAxMjBweDsgfSB9XG5cbi5idWRkaWVzLWNvbnRhaW5lciB7XG4gIG1heC13aWR0aDogMTAwJTsgfVxuXG4uYnVkZHkge1xuICB3aWR0aDogNTBweDtcbiAgbWFyZ2luLXJpZ2h0OiAyMHB4OyB9XG5cbnBhdGgge1xuICBmaWxsLW9wYWNpdHk6IC41O1xuICB0cmFuc2l0aW9uOiBhbGwgLjVzOyB9XG5cbnBhdGg6bnRoLWNoaWxkKG4rMzIpIHtcbiAgb3BhY2l0eTogMDsgfVxuXG5zdmc6aG92ZXIgcGF0aDpudGgtY2hpbGQobisxMCkge1xuICBvcGFjaXR5OiAxOyB9XG5cbnAge1xuICBmb250LWZhbWlseTogQ291cmllciBOZXc7IH1cblxuc3ZnIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZsb2F0OiBsZWZ0O1xuICBtYXJnaW46IDA7IH1cblxuKiB7XG4gIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuXG5jYW52YXMge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHotaW5kZXg6IC0xO1xuICByaWdodDogMDtcbiAgdG9wOiAwO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuICBvcGFjaXR5OiAuNztcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuXG4uZmFjZWJvb2staWNvbiB7XG4gIHdpZHRoOiAyMHB4O1xuICBvcGFjaXR5OiAuODA7XG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gIHRyYW5zZm9ybTogcm90YXRlKC05MGRlZyk7IH1cblxuLmdpdGh1Yi1pY29uIHtcbiAgd2lkdGg6IDIwcHg7XG4gIG9wYWNpdHk6IC44MDtcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbiAgdHJhbnNmb3JtOiByb3RhdGUoLTkwZGVnKTsgfVxuXG4uaW5zdGFncmFtLWljb24ge1xuICB3aWR0aDogMjBweDtcbiAgb3BhY2l0eTogLjgwO1xuICBtYXJnaW4tbGVmdDogMTBweDtcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpOyB9XG5cbi50d2l0dGVyLWljb24ge1xuICBoZWlnaHQ6IDIwcHg7XG4gIG9wYWNpdHk6IC44MDtcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbiAgdHJhbnNmb3JtOiByb3RhdGUoLTkwZGVnKTsgfVxuXG4ubWFpbC1pY29uIHtcbiAgd2lkdGg6IDIwcHg7XG4gIG9wYWNpdHk6IC44MDtcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbiAgdHJhbnNmb3JtOiByb3RhdGUoLTkwZGVnKTsgfVxuXG5ib2R5LFxucCB7XG4gIGZvbnQtZmFtaWx5OiBcIk92ZXJwYXNzIE1vbm9cIiwgbW9ub3NwYWNlOyB9XG5cbmgxLFxuaDIsXG5oMyB7XG4gIGZvbnQtZmFtaWx5OiBcIm5leGFfYm9sZHJlZ3VsYXJcIiwgc2Fucy1zZXJpZjsgfVxuICBoMS5zYWtlci10ZXh0LFxuICBoMi5zYWtlci10ZXh0LFxuICBoMy5zYWtlci10ZXh0IHtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxMTUlO1xuICAgIGZvbnQtc2l6ZTogMS43NXJlbTsgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgaDEsXG4gICAgaDIsXG4gICAgaDMge1xuICAgICAgZm9udC1zaXplOiAxLjVyZW07IH0gfVxuXG5oNCB7XG4gIGZvbnQtZmFtaWx5OiBcIkNoaXZvXCIsIHNhbnMtc2VyaWY7IH1cbiAgaDQuaGVhZGxpbmUge1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgbGluZS1oZWlnaHQ6IDExNSU7XG4gICAgZm9udC1zaXplOiAxLjc1cmVtOyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICBoNCB7XG4gICAgICBmb250LXNpemU6IDEuNXJlbTsgfSB9XG5cbnAge1xuICBmb250LXNpemU6IDFyZW07XG4gIGxpbmUtaGVpZ2h0OiAyOyB9XG4gIHAudW5kZXItdGV4dCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDsgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgcCB7XG4gICAgICBmb250LXNpemU6IDAuNjVyZW07IH0gfVxuXG46OnNlbGVjdGlvbiB7XG4gIGJhY2tncm91bmQ6ICMzMzM7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LXNoYWRvdzogbm9uZTsgfVxuXG46Oi1tb3otc2VsZWN0aW9uIHtcbiAgYmFja2dyb3VuZDogIzMzMztcbiAgY29sb3I6ICNmZmY7XG4gIHRleHQtc2hhZG93OiBub25lOyB9XG5cbjo6LXdlYmtpdC1zZWxlY3Rpb24ge1xuICBiYWNrZ3JvdW5kOiAjMzMzO1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1zaGFkb3c6IG5vbmU7IH1cblxuQG1lZGlhIHByaW50IHtcbiAgKiB7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcbiAgICBjb2xvcjogIzAwMCAhaW1wb3J0YW50O1xuICAgIGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgICB0ZXh0LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50OyB9XG4gIGEsXG4gIGE6dmlzaXRlZCB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IH1cbiAgYVtocmVmXTphZnRlciB7XG4gICAgY29udGVudDogXCIgKFwiIGF0dHIoaHJlZikgXCIpXCI7IH1cbiAgYWJiclt0aXRsZV06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIChcIiBhdHRyKHRpdGxlKSBcIilcIjsgfVxuICAuaXIgYTphZnRlcixcbiAgYVtocmVmXj1cImphdmFzY3JpcHQ6XCJdOmFmdGVyLFxuICBhW2hyZWZePVwiI1wiXTphZnRlciB7XG4gICAgY29udGVudDogXCJcIjsgfVxuICBwcmUsXG4gIGJsb2NrcXVvdGUge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICM5OTk7XG4gICAgcGFnZS1icmVhay1pbnNpZGU6IGF2b2lkOyB9XG4gIHRoZWFkIHtcbiAgICBkaXNwbGF5OiB0YWJsZS1oZWFkZXItZ3JvdXA7IH1cbiAgdHIsXG4gIGltZyB7XG4gICAgcGFnZS1icmVhay1pbnNpZGU6IGF2b2lkOyB9XG4gIGltZyB7XG4gICAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7IH1cbiAgQHBhZ2Uge1xuICAgIG1hcmdpbjogMC41Y207IH1cbiAgcCxcbiAgaDIsXG4gIGgzIHtcbiAgICBvcnBoYW5zOiAzO1xuICAgIHdpZG93czogMzsgfVxuICBoMixcbiAgaDMge1xuICAgIHBhZ2UtYnJlYWstYWZ0ZXI6IGF2b2lkOyB9IH1cbiIsIioge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBmb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XG59XG5odG1sLFxuYm9keSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIG1pbi1oZWlnaHQ6IDEwMCU7XG59XG5cbmh0bWwge1xuICBmb250LXNpemU6IDEwMCU7XG4gIGJhY2tncm91bmQ6ICRjb2xvci1hcHA7XG59XG5ib2R5IHtcbiAgZm9udDogMzAwIDE2cHgvMS42ICdIZWx2ZXRpY2EgTmV1ZScsIEhlbHZldGljYSwgQXJpYWw7XG4gIGNvbG9yOiAkY29sb3ItYmxhY2s7XG4gIHRyYW5zaXRpb246IGFsbCAuNHMgLjNzIGVhc2UtaW47XG59XG5cbmEge1xuICBjdXJzb3I6IHVybCgnLi4vaW1nL2N1cnNvci5wbmcnKSAwIDAsIGF1dG87XG4gIGN1cnNvcjogLXdlYmtpdC1pbWFnZS1zZXQoXG4gIHVybCgnLi4vaW1nL2N1cnNvci5wbmcnKSAxeCxcbiAgdXJsKCcuLi9pbWcvY3Vyc29yLnBuZycpIDJ4XG4pLCBhdXRvO1xufVxuIiwiJGNvbG9yLWFwcDogI2ZmZmZmZjtcbiRjb2xvci1ibGFjazogIzAwMDtcbiRjb2xvci1saW5rczogIzAwMDtcbiRjb2xvci13b3JrOiAjMDAwO1xuJGNvbG9yLW1lbWJlcjogIzAwMDtcbiRjb2xvci10ZXJtaW5hbDogIzAwZmYwMDtcblxuJGZvbnQtaGVhZGxpbmU6ICdDaGl2bycsIHNhbnMtc2VyaWY7XG4kZm9udC1ib2R5OiAnT3ZlcnBhc3MgTW9ubycsIG1vbm9zcGFjZTtcbiRmb250LXNha2VyOiAnbmV4YV9ib2xkcmVndWxhcicsIHNhbnMtc2VyaWY7XG4iLCIvKiEgbm9ybWFsaXplLmNzcyB2NC4xLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG5cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBkZWZhdWx0IGZvbnQgZmFtaWx5IGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBJRSBhbmQgaU9TLlxuICovXG5cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUsIGFuZCBGaXJlZm94LlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cblxuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscywgLyogMSAqL1xuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbm1haW4sIC8qIDIgKi9cbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7IC8qIDEgKi9cbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKi9cblxuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGlPUyA0LTcuXG4gKi9cblxuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cblxucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAtLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cblxudGVtcGxhdGUsIC8qIDEgKi9cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyogTGlua3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIGdhcHMgaW4gbGlua3MgdW5kZXJsaW5lIGluIGlPUyA4KyBhbmQgU2FmYXJpIDgrLlxuICovXG5cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgLyogMSAqL1xuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwOiBvYmplY3RzOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBvdXRsaW5lIG9uIGZvY3VzZWQgbGlua3Mgd2hlbiB0aGV5IGFyZSBhbHNvIGFjdGl2ZSBvciBob3ZlcmVkXG4gKiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuXG5hOmFjdGl2ZSxcbmE6aG92ZXIge1xuICBvdXRsaW5lLXdpZHRoOiAwO1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gRmlyZWZveCAzOS0uXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBQcmV2ZW50IHRoZSBkdXBsaWNhdGUgYXBwbGljYXRpb24gb2YgYGJvbGRlcmAgYnkgdGhlIG5leHQgcnVsZSBpbiBTYWZhcmkgNi5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzdHlsZSBpbiBBbmRyb2lkIDQuMy0uXG4gKi9cblxuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgYmFja2dyb3VuZCBhbmQgY29sb3IgaW4gSUUgOS0uXG4gKi9cblxubWFyayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZjA7XG4gIGNvbG9yOiAjMDAwO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLS5cbiAqL1xuXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG59XG5cbi8qKlxuICogSGlkZSB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKi9cblxuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuY29kZSxcbmtiZCxcbnByZSxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgbWFyZ2luIGluIElFIDguXG4gKi9cblxuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDtcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cblxuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMSAqL1xuICBoZWlnaHQ6IDA7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IC8qIDIgKi9cbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDEgKi9cbiAgbWFyZ2luOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9udCB3ZWlnaHQgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cblxub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQgeyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbixcbnNlbGVjdCB7IC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogMS4gUHJldmVudCBhIFdlYktpdCBidWcgd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gIGFuZCBgdmlkZW9gXG4gKiAgICBjb250cm9scyBpbiBBbmRyb2lkIDQuXG4gKiAyLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcbmh0bWwgW3R5cGU9XCJidXR0b25cIl0sIC8qIDEgKi9cblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cblxuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG59XG5cbi8qKlxuICogQ2hhbmdlIHRoZSBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7IC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7IC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlOyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLyogMSAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gKi9cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxuICovXG5cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgdGV4dCBzdHlsZSBvZiBwbGFjZWhvbGRlcnMgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBvcGFjaXR5OiAwLjU0O1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbn1cbiIsIi5sb2dvLXNtYWxsIHtcbiAgd2lkdGg6IDE1MHB4O1xuICBoZWlnaHQ6IGF1dG87XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBtYXJnaW4tbGVmdDogMjBweDtcbiAgbWFyZ2luLXRvcDogMjBweDtcblxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgd2lkdGg6IDI1MHB4O1xuICAgIG1hcmdpbi1sZWZ0OiA0MHB4O1xuICAgIG1hcmdpbi10b3A6IDQwcHg7XG4gIH1cbn1cblxuLnN0aWNreS0tdG9wIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IGF1dG87XG4gIHdpZHRoOiAxMDAlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRvcDogMzBweDtcbiAgbGVmdDogMjBweDtcbn1cblxuLnN0aWNreS0tbGVmdCB7XG4gIGxlZnQ6IC04NnB4O1xuICByaWdodDogYXV0bztcbiAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpIHRyYW5zbGF0ZVkoLTUwJSk7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiA1MCU7XG5cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjQ4MHB4KSB7XG4gICAgbGVmdDogLTExMHB4O1xuICB9XG59XG5cbi5zdGlja3ktLXJpZ2h0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IC05M3B4O1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpIHRyYW5zbGF0ZVkoLTUwJSk7XG5cbiAgY29sb3I6ICNmZmY7XG5cbiAgYSB7XG4gICAgZm9udC1mYW1pbHk6ICRmb250LWhlYWRsaW5lO1xuICAgIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDNweDtcbiAgICBjb2xvcjogIzAwMDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIH1cbn1cblxuLnN0aWNreS0tYm90dG9tIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBib3R0b206IDMwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICBsZWZ0OiA0MHB4O1xuXG4gIGF7XG4gICAgZm9udC1mYW1pbHk6ICRmb250LWhlYWRsaW5lO1xuICAgIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGNvbG9yOiAjMDAwO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgfVxuXG4gIC5zYWtlci10ZXh0IHtcbiAgICBmb250LWZhbWlseTogJGZvbnQtc2FrZXI7XG4gICAgbWFyZ2luLWxlZnQ6IDIwcHg7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtc2l6ZTogMC43NXJlbTtcblxuICAgICY6aG92ZXIge1xuICAgICAgLnNha2VyLWljb24ge1xuICAgICAgICBmaWxsOiAjZmMyNzZjO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC5zYWtlci1pY29uIHtcbiAgICB3aWR0aDogMjBweDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoM3B4KTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgbWFyZ2luLWxlZnQ6IDNweDtcbiAgICBmaWxsOiAkY29sb3ItYmxhY2s7XG4gICAgZmxvYXQ6IG5vbmU7XG5cbiAgICBwYXRoIHtcbiAgICAgIGZpbGwtb3BhY2l0eTogMTtcbiAgICB9XG4gIH1cbn1cbiIsIi5uYXYge1xuICB1bCB7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICBsaSB7XG4gICAgICBhIHtcblxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLndvcmstcGFuZWwge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHJpZ2h0OiAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xuICBtaW4taGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogNTAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4ucGl0Y2gtZm9ybSB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMCAxMCU7XG59XG5cbi5waXRjaC10ZXh0e1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cblxuLnBpdGNoLWZvcm0tdGV4dCB7XG4gIGJvcmRlcjogMXB4ICNmZmY7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBjb2xvcjogI2ZmZjtcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMTBweCAxMHB4IDUwcHg7XG4gIG1hcmdpbi1ib3R0b206IDI1cHg7XG4gIGZvbnQtc2l6ZTogMC44NzVyZW07XG4gIGNvbG9yOiAkY29sb3ItdGVybWluYWw7XG5cbiAgJjo6cGxhY2Vob2xkZXIge1xuICAgIGNvbG9yOiAkY29sb3ItdGVybWluYWw7XG4gIH1cblxuICAmOmZvY3VzICB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICBib3JkZXItY29sb3I6ICRjb2xvci10ZXJtaW5hbDtcbiAgfVxufVxuXG4ucGl0Y2gtYnV0dG9uLXNlbmQge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHdpZHRoOiAzNSU7XG4gIGhlaWdodDogNDZweDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBib3JkZXItcmFkaXVzOiAxMDBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tdG9wOiAxMHB4O1xuICBmb250LXNpemU6IDAuNzVyZW07XG5cbiAgJjpob3ZlciB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG5cbiAgJjpmb2N1cyB7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIG91dGxpbmU6IG5vbmU7XG4gIH1cblxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6NDgwcHgpIHtcbiAgICB3aWR0aDogOTAlO1xuICB9XG5cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjc2OHB4KSB7XG4gICAgd2lkdGg6IDgwJTtcbiAgfVxufVxuXG5cbi53b3JrLXBhbmVsIHtcbiAgd2lkdGg6IDUwdnc7XG4gIGhlaWdodDogMTAwdmg7XG4gIHRvcDogMDtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB6LWluZGV4OiAxMDAwO1xuICByaWdodDogLTQzdnc7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGJhY2tncm91bmQtY29sb3I6ICMxMTE7XG4gIHRyYW5zaXRpb246IGFsbCAuNHMgZWFzZS1pbi1vdXQ7XG4gICYub3BlbiB7XG4gICAgcmlnaHQ6IDA7XG5cbiAgICAuYXJyb3cge1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTE4MGRlZyk7XG4gICAgfVxuICB9XG59XG5cbi53b3JrLXBhbmVsX19iYXIge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxN3Z3O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG4gIGN1cnNvcjogdXJsKCcuLi9pbWcvY3Vyc29yLnBuZycpLCBhdXRvO1xuICBjdXJzb3I6IC13ZWJraXQtaW1hZ2Utc2V0KFxuICB1cmwoJy4uL2ltZy9jdXJzb3IucG5nJykgMXgsXG4gIHVybCgnLi4vaW1nL2N1cnNvci5wbmcnKSAyeFxuKSwgYXV0bztcbn1cblxuLnN0aWNreS0tcmlnaHQgc3BhbiB7XG4gIHRyYW5zZm9ybTogcm90YXRlKC0wZGVnKTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1pbi13aWR0aDogMzAwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdG9wOiA1MCU7XG59XG5cbi5hcnJvdyB7XG4gIGNvbG9yOiAjZmZmO1xuICB3aWR0aDogMzBweDtcbiAgbWFyZ2luLXRvcDogMzBweDtcbiAgdHJhbnNpdGlvbjogYWxsIDUwMG1zIGVhc2U7XG59XG4iLCJodG1sLFxuYm9keSB7XG4gIG1pbi1oZWlnaHQ6IDF2aDtcbiAgbWluLWhlaWdodDogMTAwJTtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBib3JkZXI6IG5vbmU7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbn1cblxuLm1haW4ge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uaW50cm8ge1xuICB3aWR0aDogNjAlO1xuICBtYXJnaW4tbGVmdDogNzdweDtcbiAgbWFyZ2luLXRvcDogMTIwcHg7XG4gIHdpZHRoOiA0MCU7XG5cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOjc2OHB4KSB7XG4gICAgd2lkdGg6IDYwJTtcbiAgICBtYXJnaW4tbGVmdDogMTIwcHg7XG4gICAgbWFyZ2luLXRvcDogMTIwcHg7XG4gIH1cbn1cblxuLmFib3V0IHtcbiAgICB3aWR0aDogNjAlO1xuICAgIG1hcmdpbi1sZWZ0OiA3N3B4O1xuICAgIG1hcmdpbi10b3A6IDEyMHB4O1xuICAgIHdpZHRoOiA0MCU7XG4gIFxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDo3NjhweCkge1xuICAgICAgd2lkdGg6IDYwJTtcbiAgICAgIG1hcmdpbi1sZWZ0OiAxMjBweDtcbiAgICAgIG1hcmdpbi10b3A6IDEyMHB4O1xuICB9XG59XG5cbi5idWRkaWVzLWNvbnRhaW5lciB7XG4gIG1heC13aWR0aDogMTAwJTtcbn1cblxuLmJ1ZGR5IHtcbiAgd2lkdGg6IDUwcHg7XG4gIG1hcmdpbi1yaWdodDogMjBweDtcbn1cblxucGF0aCB7XG4gIGZpbGwtb3BhY2l0eTogLjU7XG4gIHRyYW5zaXRpb246IGFsbCAuNXM7XG59XG5wYXRoOm50aC1jaGlsZChuKzMyKXtvcGFjaXR5OjA7fVxuc3ZnOmhvdmVyIHBhdGg6bnRoLWNoaWxkKG4rMTApe29wYWNpdHk6MX1cblxucCB7XG4gIGZvbnQtZmFtaWx5OiBDb3VyaWVyIE5ldztcbn1cblxuc3ZnIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZsb2F0OiBsZWZ0O1xuICBtYXJnaW46IDA7XG59XG5cbip7XG4gIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuY2FudmFzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB6LWluZGV4OiAtMTtcbiAgcmlnaHQ6IDA7XG4gIHRvcDogMDtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbiAgb3BhY2l0eTogLjc7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG4iLCJcbiAuZmFjZWJvb2staWNvbiB7XG4gICAgd2lkdGg6IDIwcHg7XG4gICAgb3BhY2l0eTogLjgwO1xuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICAgIG1hcmdpbi1yaWdodDogMTBweDtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpO1xuICB9XG5cbiAgLmdpdGh1Yi1pY29uIHtcbiAgICB3aWR0aDogMjBweDtcbiAgICBvcGFjaXR5OiAuODA7XG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICAgIHRyYW5zZm9ybTogcm90YXRlKC05MGRlZyk7XG4gIH1cblxuICAuaW5zdGFncmFtLWljb24ge1xuICAgIHdpZHRoOiAyMHB4O1xuICAgIG9wYWNpdHk6IC44MDtcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoLTkwZGVnKTtcbiAgfVxuXG4gIC50d2l0dGVyLWljb24ge1xuICAgIGhlaWdodDoyMHB4O1xuICAgIG9wYWNpdHk6IC44MDtcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoLTkwZGVnKTtcbiAgfVxuXG4gIC5tYWlsLWljb24ge1xuICAgIHdpZHRoOiAyMHB4O1xuICAgIG9wYWNpdHk6IC44MDtcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoLTkwZGVnKTtcbiAgfVxuIiwiOjpzZWxlY3Rpb257XG4gIGJhY2tncm91bmQ6ICMzMzM7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LXNoYWRvdzogbm9uZTtcbn1cbjo6LW1vei1zZWxlY3Rpb257XG4gIGJhY2tncm91bmQ6ICMzMzM7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LXNoYWRvdzogbm9uZTtcbn1cbjo6LXdlYmtpdC1zZWxlY3Rpb257XG4gIGJhY2tncm91bmQ6ICMzMzM7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LXNoYWRvdzogbm9uZTtcbn1cbiIsIkBtZWRpYSBwcmludCB7XG4gICoge1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XG4gICAgY29sb3I6ICMwMDAgIWltcG9ydGFudDtcbiAgICBib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG4gICAgdGV4dC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgfVxuICBhLFxuICBhOnZpc2l0ZWQge1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICB9XG4gIGFbaHJlZl06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIChcIiBhdHRyKGhyZWYpIFwiKVwiO1xuICB9XG4gIGFiYnJbdGl0bGVdOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIiAoXCIgYXR0cih0aXRsZSkgXCIpXCI7XG4gIH1cbiAgLmlyIGE6YWZ0ZXIsXG4gICBhW2hyZWZePVwiamF2YXNjcmlwdDpcIl06YWZ0ZXIsXG4gICBhW2hyZWZePVwiI1wiXTphZnRlciB7XG4gICAgY29udGVudDogXCJcIjtcbiAgfVxuICBwcmUsXG4gIGJsb2NrcXVvdGUge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICM5OTk7XG4gICAgcGFnZS1icmVhay1pbnNpZGU6IGF2b2lkO1xuICB9XG4gIHRoZWFkIHtcbiAgICBkaXNwbGF5OiB0YWJsZS1oZWFkZXItZ3JvdXA7XG4gIH1cbiAgdHIsXG4gIGltZyB7XG4gICAgcGFnZS1icmVhay1pbnNpZGU6IGF2b2lkO1xuICB9XG4gIGltZyB7XG4gICAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIH1cbiAgQHBhZ2Uge1xuICAgIG1hcmdpbjogMC41Y207XG4gIH1cbiAgcCxcbiAgaDIsXG4gIGgzIHtcbiAgICBvcnBoYW5zOiAzO1xuICAgIHdpZG93czogMztcbiAgfVxuICBoMixcbiAgaDMge1xuICAgIHBhZ2UtYnJlYWstYWZ0ZXI6IGF2b2lkO1xuICB9XG59XG4iXX0= */
